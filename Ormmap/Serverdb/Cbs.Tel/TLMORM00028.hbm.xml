<?xml version="1.0" encoding="utf-8"?>
<!--RemitBr-->
<!-- 
// <copyright file="TLMORM00029.hbm.xml" company="ACE Data Systems">
// Copyright (c) ACE Data Systems. All rights reserved.
// </copyright>
// <CreatedUser>Nyo Me San</CreatedUser>
// <CreatedDate>2013-05-21</CreatedDate>
// <UpdatedUser></UpdatedUser>
// <UpdatedDate></UpdatedDate>
// <Version>1.0</Version>

-->
<hibernate-mapping assembly="Ace.Cbs.Tel.Dmd" namespace="Ace.Cbs.Tel.Dmd" xmlns="urn:nhibernate-mapping-2.2">
	<import class="Ace.Cbs.Tel.Dmd.TLMDTO00028, Ace.Cbs.Tel.Dmd" rename="remitbrdto"/>

	<class name="TLMORM00028" table="RemitBr" >

		<id name="Id" type="Int32" unsaved-value="0">
			<generator class="increment">
			</generator>
		</id>

		<version name="TS" generated="always" unsaved-value="null" type="BinaryBlob">
			<column name="TS" sql-type="timestamp" not-null="true"/>
		</version>

		<property name="BranchCode">
			<column name="BranchCode" sql-type="varchar" not-null="true" />
		</property>
		<property name="TelaxCharges">
			<column name="TlxCharges" sql-type="numeric" not-null="true" />
		</property>
		<property name="TTSerial">
			<column name="TTSerial" sql-type="numeric" not-null="false" />
		</property>
		<property name="DraftSerial">
			<column name="DrftSerial" sql-type="numeric" not-null="false" />
		</property>
		<property name="StateCode">
			<column name="StateCode" sql-type="varchar" not-null="false" />
		</property>
		<property name="DrawingAccount">
			<column name="DrawAc" sql-type="varchar" not-null="false" />
		</property>
		<property name="EncashAccount">
			<column name="EncashAc" sql-type="varchar" not-null="false" />
		</property>
		<property name="IBSComAccount">
			<column name="IBSComAc" sql-type="varchar" not-null="false" />
		</property>
		<property name="TelaxAccount">
			<column name="TelexAc" sql-type="varchar" not-null="false" />
		</property>
		<property name="IblSerial">
			<column name="IblSerial" sql-type="numeric" not-null="false" />
		</property>
		<property name="IRPOAccount">
			<column name="IRPOAC" sql-type="varchar" not-null="false" />
		</property>
		<property name="UniqueIdentifier">
			<column name="UId" sql-type="char" not-null="false" />
		</property>
		<property name="SourceBranchCode">
			<column name="SourceBr" sql-type="varchar" not-null="false" />
		</property>
		<property name="Currency">
			<column name="Cur" sql-type="varchar" not-null="false" />
		</property>
		<!--Support Fields-->

		<property name="Active" not-null="true"/>
		<property name="CreatedDate" not-null="true" update="false" />
		<property name="CreatedUserId" not-null="true" update="false"/>
		<property name="UpdatedDate" not-null="false" insert="false" />
		<property name="UpdatedUserId" not-null="false" insert="false"/>

	</class>

  <!--//TLMDAO00028.SelectMaxId//-->
  <query name="TLMDAO00028.SelectMaxId">
    select new remitbrdto
    (
    MAX(rbr.Id)
    )
    from TLMORM00028 as rbr
  </query>
  
  <query name="TLMDAO00028.UpdateSerial">
    update TLMORM00028 remitbr
    set
    remitbr.TTSerial=:serial,
    remitbr.UpdatedDate=:updateddate,
    remitbr.UpdatedUserId=:updateduserId
    where remitbr.BranchCode =:drawerbank and
    remitbr.Currency=:currencycode and remitbr.Active = true
  </query>

	<!--//RemitBr.CheckExist//-->
	<query name="RemitBrDAO.CheckExist">
		select new remitbrdto( r.Id)
		from TLMORM00028 as r 
    where ( r.BranchCode =: branchCode and r.SourceBranchCode =: sourceBr and r.Currency =: cur  ) 
    and  r.Active = true
	</query>

	<!--//RemitBrDAO.SelectByCode//-->
	<query name="RemitBrDAO.SelectByCode">
		select new remitbrdto(
		r.Id,
		r.BranchCode,
		r.TelaxCharges,
		r.TTSerial,
		r.DraftSerial,
		r.StateCode,
		r.DrawingAccount,
		r.EncashAccount,
		r.IBSComAccount,
		r.TelaxAccount,
		r.IblSerial,
		r.IRPOAccount,
		r.UniqueIdentifier,
		r.SourceBranchCode,
		r.Currency,
		r.Active,
		r.TS,
		r.CreatedDate,
		r.CreatedUserId,
		r.UpdatedDate,
		r.UpdatedUserId
		)
		from TLMORM00028 as r
		where r.BranchCode = :branchCode
		and r.SourceBranchCode = :sourceBranch
		and r.Currency = :currency
		and r.Active = true
	</query>


	<!--//RemitBrDAO.DeleteById//-->
	<query name="RemitBrDAO.DeleteById">
		update TLMORM00028 r set
		r.Active = false,
		r.UpdatedDate = :updatedDate,
		r.UpdatedUserId = :updatedUserId
		where r.Id = :id and r.Active = true
	</query>

  <query name ="TLMDAO00028.SelectTTSerialByDrawerBankAndSourceBrachCode">
    select new remitbrdto(
    r.TTSerial,
    r.Active
    )
    from TLMORM00028 as r
    where r.BranchCode = :drawerbank and
    r.SourceBranchCode = :SourceBr and
    r.Currency = :currencycode and
    r.Active = true
  </query>

  <query name="RemitBrDAO.UpdateSerialRemit">
    update TLMORM00028 remitbr
    set
    remitbr.TTSerial=:serial,
    remitbr.UpdatedDate = :UpdatedDate,
    remitbr.UpdatedUserId = :updatedUserId
    where remitbr.BranchCode =:drawerbank and
    remitbr.SourceBranchCode = :sourceBranch and
    remitbr.Currency=:currencycode and remitbr.Active = true
  </query>

  <query name="TLMDAO00028.UpdateSerialRemit">
		update TLMORM00028 remitbr
		set
		remitbr.TTSerial=:serial,
		remitbr.DraftSerial=:serial,
		remitbr.IblSerial=:serial,
		remitbr.UpdatedDate = :UpdatedDate,
		remitbr.UpdatedUserId = :updatedUserId
		where remitbr.SourceBranchCode = :sourceBranch and remitbr.Active = true
	</query>

	<query name="TLMDAO00028.SelectTTSerialByDrawerBankAndCurrencyCode">
		select new remitbrdto(
		r.Id,
		r.BranchCode,
		r.TelaxCharges,
		r.TTSerial,
		r.DraftSerial,
		r.StateCode,
		r.DrawingAccount,
		r.EncashAccount,
		r.IBSComAccount,
		r.TelaxAccount,
		r.IblSerial,
		r.IRPOAccount,
		r.UniqueIdentifier,
		r.SourceBranchCode,
		r.Currency,
		r.Active,
		r.TS,
		r.CreatedDate,
		r.CreatedUserId,
		r.UpdatedDate,
		r.UpdatedUserId
		)
		from TLMORM00028 as r
		where r.BranchCode = :drawerbank
		and r.Currency = :currencycode
		and r.Active = true
	</query>
	<!--//RemitBrDAO.SelectById//-->
	<query name="RemitBrDAO.SelectById">
		select new remitbrdto(
		r.Id,
		r.BranchCode,
		r.TelaxCharges,
		r.TTSerial,
		r.DraftSerial,
		r.StateCode,
		r.DrawingAccount,
		r.EncashAccount,
		r.IBSComAccount,
		r.TelaxAccount,
		r.IblSerial,
		r.IRPOAccount,
		r.UniqueIdentifier,
		r.SourceBranchCode,
		r.Currency,
		r.Active,
		r.TS,
		r.CreatedDate,
		r.CreatedUserId,
		r.UpdatedDate,
		r.UpdatedUserId
		)
		from TLMORM00028 as r
		where r.Id = :id
		and r.SourceBranchCode = :sourceBranch
		and r.Active = true
	</query>

</hibernate-mapping>
