<?xml version="1.0" encoding="utf-8"?>
<hibernate-mapping assembly="Ace.Windows.Admin.DataModel" namespace="Ace.Windows.Admin.DataModel" xmlns="urn:nhibernate-mapping-2.2">

  <import class="Ace.Windows.Admin.DataModel.ChargeOfAccountDTO, Ace.Windows.Admin.DataModel" rename="coadto"/>

	<class name="ChargeOfAccount" table="[COA]" >

    <composite-id>
      <key-property name="ACode" column="ACode"></key-property>
      <key-property name="DCODE" column="DCODE"></key-property>
    </composite-id>

    <version name="TS" generated="always" unsaved-value="null" type="BinaryBlob">
      <column name="TS" sql-type="timestamp" not-null="true"/>
    </version>

		<property name="AccountName">
			<column name="ACName" sql-type="varchar" not-null="true" />
		</property>

		<property name="ACType">
			<column name="ACType" sql-type="varchar" not-null="true" />
		</property>

		<property name="PDate">
			<column name="PDate" sql-type="datetime" not-null="true" />
		</property>

		<property name="CBMACode">
			<column name="CBMACode" sql-type="varchar" not-null="false" />
		</property>

		<many-to-one name="COAAccountName" column="[ACode]" class="ChargeOfAccountSetup" insert="false" update="false"></many-to-one>

		<property name="Active" not-null="true"/>
		<property name="CreatedDate" not-null="true" update="false" />
		<property name="CreatedUserId" not-null="true" update="false"/>
		<property name="UpdatedDate" not-null="false" insert="false" />
		<property name="UpdatedUserId" not-null="false" insert="false"/>

	</class>

	<query name="COA_SelectByACode">
    select new coadto(
    c.ACode,
    c.AccountName,
    c.DCODE
    )
    from ChargeOfAccount as c
    where c.ACode = :aCode and
    c.DCODE = :sourceBranchCode
    and c.Active = true
  </query>

  <query name="CCOA_SelectByACode">
    select new coadto(
    c.ACode,
    c.AccountName,
    c.DCODE,
    c.ACType,
    c.PDate,
    c.CBMACode,
    c.Active,
    c.TS,
    c.CreatedDate,
    c.CreatedUserId,
    c.UpdatedDate,
    c.UpdatedUserId
    )
    from ChargeOfAccount as c
    where c.ACode = :aCode and
    c.DCODE = :sourceBranchCode and c.Active = true
  </query>


  <query name="COA.SelectAccountName">
		select new coadto(

		c.AccountName,cs.AccountName,c.DCODE

		)
		from ChargeOfAccount as c
		inner join c.COAAccountName as cs
		where cs.AccountNo=:accountNo
		and cs.Active = true
		and c.Active = true
	</query>

	<query name="COA.SelectAccountNoAndAccountName">
		select new coadto(
		c.ACode,c.AccountName,c.DCODE
		)
		from ChargeOfAccount as c
		inner join c.COAAccountName as cs
		where (cs.AccountName=:sourceBankAccountName or cs.AccountName=:otherBankAccountName)
		and c.DCODE=:sourceBranchCode
		and cs.CurrencyCode=:currency
		and cs.SourceBranchCode=:sourceBranchCode
	</query>

	<query name="TLMCTL00015.SelectAccountName">
    select new coadto (c.AccountName)
    from ChargeOfAccount as c
    where ACode = :acode and Active = true
  </query>

	<query name="CXCLE00001.SelectACode">
		select new coadto(
		c.ACode
		)
		from ChargeOfAccount as c
		inner join c.COAAccountName as cs
		where cs.AccountName = :accountName and
		cs.SourceBranchCode = :sourceBranchCode
		and cs.Active = true
		and c.Active = true
	</query>

	<query name="TLMCTL00020.SelectDescription">
		select new coadto(
		c.AccountName,
		c.Active
		)
		from ChargeOfAccount as c
		where ACode = :encashAccount
		and Active = true
	</query>

	<query name="ZoneDAO.CheckAccountCode">
    select new coadto(
    c.ACode
    )
    from ChargeOfAccount as c
    where ACode = :aCode and Active = true
  </query>

	<!--//COA.CheckExist1//-->
	<query name="COADAO.CheckExist1">
    select new coadto( c.ACode )
    from ChargeOfAccount as c where c.ACode =: aCode and c.DCODE=: dCode and c.Active = true
  </query>

  <!--//COA.CheckExist2//-->
  <query name="COADAO.CheckExist2">
    select new coadto( c.ACode )
    from ChargeOfAccount as c where ( c.ACode =: aCode ) and c.Active = true
  </query>

  <!--//COA.Update//-->
  <query name="COADAO.Update">
    update ChargeOfAccount c
    set c.AccountName =: accountName,
    c.CBMACode =: CBMACode,
    c.UpdatedUserId =: updatedUserId,
    c.UpdatedDate =: updatedDate
    where c.ACode =: aCode and c.DCODE =:dCode and c.Active = true
  </query>
  
	<!--//COADAO.SelectAll//-->
	<query name="COADAO.SelectAll">
    select new coadto(
    c.ACode,
    c.AccountName,
    c.DCODE,
    c.ACType,
    c.PDate,
    c.CBMACode,
    c.Active,
    c.TS,
    c.CreatedDate,
    c.CreatedUserId,
    c.UpdatedDate,
    c.UpdatedUserId
    )
    from ChargeOfAccount as c
    where c.Active = true
	order by c.ACode
  </query>

  <!--//COADAO.SelectByBranch//-->
  <query name="COADAO.SelectByBranch">
    select distinct new coadto(
    c.ACode,
    c.AccountName,
    c.ACType,
    c.CBMACode,
    c.Active
    )
    from ChargeOfAccount as c
    where c.Active = true
  </query>

  <!--//COADAO.SelectByACode//-->
	<query name="COADAO.SelectByACode">
    select new coadto(
    c.ACode,
    c.AccountName,
    c.DCODE,
    c.ACType,
    c.PDate,
    c.CBMACode,
    c.Active,
    c.TS,
    c.CreatedDate,
    c.CreatedUserId,
    c.UpdatedDate,
    c.UpdatedUserId
    )
    from ChargeOfAccount as c
    where c.ACode = :aCode
    and c.Active = true
  </query>

	<!--//COADAO.SelectByACode//-->
	<query name="COADAO.SelectAllByACode">
	select new coadto(
		c.ACode,
		c.AccountName,
		c.DCODE,
		c.ACType,
		c.PDate,
		c.CBMACode,
		c.Active,
		c.TS,
		c.CreatedDate,
		c.CreatedUserId,
		c.UpdatedDate,
		c.UpdatedUserId
		)
		from ChargeOfAccount as c
		where c.ACode = :aCode
		and c.Active = true
</query>
	
	

  <query name="ChargeOfAccount.SelectByOLSAccount">
    select new coadto
    (
    c.ACode,
    c.AccountName
    )
    from ChargeOfAccount as c
    where c.AccountName like 'OLS%'
    and c.DCODE =:sourceBranchCode
    and c.Active = true
    order by c.ACode
  </query>
  
  </hibernate-mapping>