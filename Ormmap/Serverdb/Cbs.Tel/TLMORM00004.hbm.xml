<?xml version="1.0" encoding="utf-8"?>
<!--IBLTLF-->
<!-- 
// <copyright file="TLMORM00004.hbm.xml" company="ACE Data Systems">
// Copyright (c) ACE Data Systems. All rights reserved.
// </copyright>
// <CreatedUser>Nyo Me San</CreatedUser>
// <CreatedDate>2013-05-21</CreatedDate>
// <UpdatedUser></UpdatedUser>
// <UpdatedDate></UpdatedDate>
// <Version>1.0</Version>

-->
<hibernate-mapping assembly="Ace.Cbs.Tel.Dmd" namespace="Ace.Cbs.Tel.Dmd" xmlns="urn:nhibernate-mapping-2.2">
	<import class="Ace.Cbs.Tel.Dmd.TLMDTO00004, Ace.Cbs.Tel.Dmd" rename="ibltlfdto"/>
	<class name="TLMORM00004" table="IBLTLF" >

		<id name="Id" type="Int32" unsaved-value="0">
		</id>
    
    <version name="TS" generated="always" unsaved-value="null" type="BinaryBlob">
      <column name="TS" sql-type="timestamp" not-null="true"/>
    </version>
    
		<property name="FromBranch">
			<column name="FromBranch" sql-type="varchar" not-null="false" />
		</property>
		<property name="ToBranch">
			<column name="ToBranch" sql-type="varchar" not-null="false" />
		</property>
		<property name="AccountNo">
			<column name="AcctNo" sql-type="varchar" not-null="true" />
		</property>
		<property name="Amount">
			<column name="Amount" sql-type="numeric" not-null="true" />
		</property>
		<property name="TranType">
			<column name="TranType" sql-type="varchar" not-null="true" />
		</property>
		<property name="Date_Time">
			<column name="Date_Time" sql-type="datetime" not-null="true" />
		</property>
		<property name="InOut">
			<column name="InOut" sql-type="bit" not-null="true" />
		</property>
		<property name="Success">
			<column name="Success" sql-type="bit" not-null="true" />
		</property>
		<property name="Eno">
			<column name="ENo" sql-type="varchar" not-null="true" />
		</property>
		<property name="UserNo">
			<column name="UserNo" sql-type="varchar" not-null="true" />
		</property>
		<property name="Cheque">
			<column name="Cheque" sql-type="varchar" not-null="false" />
		</property>
		<property name="Income">
			<column name="Income" sql-type="numeric" not-null="false" />
		</property>
		<property name="Communicationcharge">
			<column name="Commucharge" sql-type="numeric" not-null="false" />
		</property>
		<property name="Reversal">
			<column name="Reversal" sql-type="bit" not-null="false" />
		</property>
		<property name="IncomeType">
			<column name="IncomeType" sql-type="int" not-null="false" />
		</property>
		<property name="RelatedAccount">
			<column name="RelatedAc" sql-type="varchar" not-null="false" />
		</property>
		<property name="RelatedBranch">
			<column name="RelatedBr" sql-type="varchar" not-null="false" />
		</property>
		<property name="UniqueId">
			<column name="UId" sql-type="char" not-null="false" />
		</property>
		<property name="SourceBranchCode">
			<column name="SourceBr" sql-type="varchar" not-null="true" />
		</property>
		<property name="Currency">
			<column name="Cur" sql-type="varchar" not-null="true" />
		</property>
    
		<!--Support Fields-->
		
		<property name="Active" not-null="true"/>
		<property name="CreatedDate" not-null="true" update="false" />
		<property name="CreatedUserId" not-null="true" update="false"/>
		<property name="UpdatedDate" not-null="false" insert="false" />
		<property name="UpdatedUserId" not-null="false" insert="false"/>

		<one-to-one name="CashDeno"  class="TLMORM00015" property-ref="TlfEntryNo" ></one-to-one>
	</class>

  <!--//IBLTLFDAO.SelectMaxId//-->
  <query name="IBLTLFDAO.SelectMaxId">
    select new ibltlfdto(
    Max(a.Id)
    )
    from TLMORM00004 as a
  </query>
  
  <query name="IBLTLFDAO.CheckExist">
    select new ibltlfdto(
    a.AccountNo
    )
    from TLMORM00004 as a
    where a.AccountNo =: acctno 
    and  a.Active = true
  </query>

	<!--//IBLTLFDAO.SelectIBLTlfInfoByEno//-->
	<query name="IBLTLFDAO.SelectIBLTlfInfoByEno">
		select new ibltlfdto
		(
		a.Eno,
		a.Date_Time,
		a.Amount,
		a.Cheque,
		a.AccountNo
		)
		from TLMORM00004 as a
		where a.Eno = :eno
		and a.SourceBranchCode = :sourceBr
		and a.Reversal = false
		and a.Active = true
	</query>

	<!--//IBLTLFDAO.CheckExistRelatedBrAndRelatedAC//-->
	<query name="IBLTLFDAO.CheckExistRelatedBrAndRelatedAC">
		select new ibltlfdto
		(	
		a.RelatedAccount,
		a.RelatedBranch
		)
		from TLMORM00004 as a
		where a.Eno = :eno
		and a.SourceBranchCode = :sourceBr
		and a.Active = true
	</query>

	<!--Select Data for Transaction Reconsile-->
	<query name="IBLTLFDAO.SelectDataForTransactionReconsile">
		select new ibltlfdto
		(
		ibltlf.ToBranch,
		ibltlf.Eno,
		ibltlf.Currency,
		ibltlf.Amount,
		ibltlf.RelatedAccount,
		ibltlf.Cheque,
		ibltlf.AccountNo,
		ibltlf.TranType
		)
		from TLMORM00004 as ibltlf
		where ibltlf.FromBranch = :frombranch
		and ibltlf.ToBranch = :tobranch
		and ibltlf.InOut= :inout
		and Convert(char(10),ibltlf.Date_Time,111) = Convert(char(10),:datetime,111)
		and ibltlf.SourceBranchCode=:sourceBr
		and ibltlf.Active = true
		order by ibltlf.Eno,ibltlf.RelatedAccount
	</query>

	<!--Select Data for Transaction Reconsile-->
	<query name="TLMDAO00004.SelectCharegsByGroupNo">
		select new ibltlfdto
		(
		ibltlf.AccountNo,
		ibltlf.Income,
		ibltlf.Communicationcharge
		)
		from TLMORM00004 as ibltlf
		where (ibltlf.Eno = :entryno and ibltlf.SourceBranchCode = :sourceBr) And (ibltlf.Eno = :entryno and ibltlf.IncomeType != 0)
		and ibltlf.Active = true
	</query>

  <query name="CXDAO00006.UpdateReversalIBLTLFByENo">
    update TLMORM00004 ibltlf
    set
    ibltlf.Reversal=true
    ,ibltlf.UpdatedUserId= :UpdatedUserId
    ,ibltlf.UpdatedDate= :updatedDate
    where
    ibltlf.Eno = :Eno
    and ibltlf.Active=true
    and ibltlf.Reversal=false
    and ibltlf.SourceBranchCode= :SourceBranchCode
  </query>

  <query name="CXDAO00006.SelectIBLTLFs">
    select new ibltlfdto(
    IBLTLF.Id
    ,IBLTLF.FromBranch
    ,IBLTLF.ToBranch
    ,IBLTLF.AccountNo
    ,IBLTLF.Amount
    ,IBLTLF.TranType
    ,IBLTLF.Date_Time
    ,IBLTLF.InOut
    ,IBLTLF.Success
    ,IBLTLF.Eno
    ,IBLTLF.UserNo
    ,IBLTLF.Cheque
    ,IBLTLF.Income
    ,IBLTLF.Communicationcharge
    ,IBLTLF.Reversal
    ,IBLTLF.IncomeType
    ,IBLTLF.RelatedAccount
    ,IBLTLF.RelatedBranch
    ,IBLTLF.UniqueId
    ,IBLTLF.SourceBranchCode 
    ,IBLTLF.Currency
    ,IBLTLF.Active
    ,IBLTLF.CreatedDate
    ,IBLTLF.CreatedUserId
    ,IBLTLF.UpdatedDate
    ,IBLTLF.UpdatedUserId
    )
    from TLMORM00004 as IBLTLF
    where
    IBLTLF.Eno= :ENO and
    IBLTLF.Reversal=false and
    IBLTLF.Active=true and
	<!--IBLTLF.InOut = 0 and--> 
    IBLTLF.SourceBranchCode= :BranchCode
  </query>
  

	<!--//IBLTLFDAO.SelectAll//-->
	<query name="IBLTLFDAO.SelectAll">
		select new ibltlfdto(
		i.Id,
		i.FromBranch,
		i.ToBranch,
		i.AccountNo,
		i.Amount,
		i.TranType,
		i.Date_Time,
		i.InOut,
		i.Success,
		i.Eno,
		i.UserNo,
		i.Cheque,
		i.Income,
		i.Communicationcharge,
		i.Reversal,
		i.IncomeType,
		i.RelatedAccount,
		i.RelatedBranch,
		i.UniqueId,
		i.SourceBranchCode,
		i.Currency,
		i.Active,
		i.TS,
		i.CreatedDate,
		i.CreatedUserId,
		i.UpdatedDate,
		i.UpdatedUserId
		)
		from TLMORM00004 as i
		where i.Active = true
		and i.SourceBranchCode=:SourceBranchCode
		and i.TranType!='ENQ'
	</query>

	<!--"IBLTLFDAO.DeleteAll"-->
	<query name="IBLTLFDAO.DeleteAll">
		delete from TLMORM00004
		where SourceBranchCode=:SourceBranchCode and Active = true
	</query>

  <!--//IBLTLFDAO.SelectDistinctAccountNoByEno(HWH)//-->
  <query name="IBLTLFDAO.SelectDistinctAccountNoByEno">
	  select distinct new ibltlfdto
	  (
	  a.AccountNo
	  )
	  from TLMORM00004 as a
	  where a.Eno = :eno
	  and Convert(char(10),a.Date_Time,111) = Convert(char(10),:datetime,111)
	  and a.SourceBranchCode = :sourcebr
	  and a.TranType Like :trantype
	  and a.Reversal = false	  
	  and a.Active = true
  </query>

</hibernate-mapping>
