<?xml version="1.0" encoding="utf-8"?>
<!--CashDeno-->
<!-- 
// <copyright file="TLMORM00015.hbm.xml" company="ACE Data Systems">
// Copyright (c) ACE Data Systems. All rights reserved.
// </copyright>
// <CreatedUser>Nyo Me San</CreatedUser>
// <CreatedDate>2013-05-21</CreatedDate>
// <UpdatedUser></UpdatedUser>
// <UpdatedDate></UpdatedDate>
// <Version>1.0</Version>
-->
<hibernate-mapping assembly="Ace.Cbs.Tel.Dmd" namespace="Ace.Cbs.Tel.Dmd" xmlns="urn:nhibernate-mapping-2.2">
  
	<import class="Ace.Cbs.Tel.Dmd.TLMDTO00015, Ace.Cbs.Tel.Dmd" rename="cashdenodto"/>
  
	<class name="TLMORM00015" table="[CashDeno]">

    <id name="Id" type="Int32" unsaved-value="0">
      <generator class="increment">
      </generator>
    </id>
		
		
    <version name="TS" generated="always" unsaved-value="null" type="BinaryBlob">
      <column name="TS" sql-type="timestamp" not-null="true"/>
    </version>
    
		<property name="DenoEntryNo">
			<column name="Deno_Eno" sql-type="varchar" not-null="false" />
		</property>
    
		<property name="TlfEntryNo">
			<column name="Tlf_Eno" sql-type="varchar" not-null="true" />
		</property>
    
		<property name="AccountType">
			<column name="AcType" sql-type="varchar" not-null="false" />
		</property>
    
		<property name="FromType">
			<column name="FromType" sql-type="varchar" not-null="false" />
		</property>
    
		<property name="BranchCode">
			<column name="BranchCode" sql-type="varchar" not-null="false" />
		</property>
    
		<property name="ReceiptNo">
			<column name="ReceiptNo" sql-type="varchar" not-null="false" />
		</property>
    
		<property name="Amount">
			<column name="Amount" sql-type="numeric(15,2)" not-null="false" />
		</property>
    
		<property name="AdjustAmount">
			<column name="AdjustAmt" sql-type="numeric(15,2)" not-null="false" />
		</property>
    
		<property name="CashDate">
			<column name="Cash_Date" sql-type="datetime" not-null="false" />
		</property>
    
		<property name="DenoDetail">
			<column name="Deno_Detail" sql-type="varchar" not-null="false" />
		</property>
    
		<property name="DenoRefundDetail">
			<column name="DenoRefund_Detail" sql-type="varchar" not-null="false" />
		</property>
    
		<property name="UserNo">
			<column name="UserNo" sql-type="varchar" not-null="false" />
		</property>
    
		<property name="CounterNo">
			<column name="CounterNo" sql-type="varchar" not-null="false" />
		</property>
    
		<property name="Status">
			<column name="Status" sql-type="varchar" not-null="true" />
		</property>
    
		<property name="Reverse">
			<column name="Reverse" sql-type="bit" not-null="false" />
		</property>
    
		<property name="UniqueId">
			<column name="UId" sql-type="char" not-null="false" />
		</property>
    
		<property name="SourceBranchCode">
			<column name="SourceBr" sql-type="varchar" not-null="false" />
		</property>
    
		<property name="Currency">
			<column name="Cur" sql-type="varchar" not-null="true" />
		</property>
    
		<property name="DenoRate">
			<column name="DenoRate" sql-type="varchar" not-null="false" />
		</property>
    
		<property name="DenoRefundRate">
			<column name="DenoRefundRate" sql-type="varchar" not-null="false" />
		</property>
    
		<property name="SettlementDate">
			<column name="SettlementDate" sql-type="datetime" not-null="false" />
		</property>
    
		<property name="AllDenoRate">
			<column name="AllDenoRate" sql-type="varchar" not-null="false" />
		</property>
    
		<property name="Rate">
			<column name="Rate" sql-type="numeric(15,2)" not-null="false" />
		</property>
    
		<!--Support fields-->
        
		<property name="Active" not-null="true"/>
		<property name="CreatedDate" not-null="true" update="false" />
		<property name="CreatedUserId" not-null="true" update="false"/>
		<property name="UpdatedDate" not-null="false" insert="false" />
		<property name="UpdatedUserId" not-null="false" insert="false"/>
    
		<!--Relationships-->
		<!--<many-to-one name="DepoDeno" column="[GroupNo]" class="TLMORM00009" insert="false" update="false"></many-to-one>-->
		<!--<many-to-one name="IblTlf" column="[ENo]" class="TLMORM00004" insert="false" update="false"></many-to-one>-->
		<one-to-one name="IblTlf"  class="TLMORM00004" property-ref="Eno" ></one-to-one>
		
		<bag name="DepoDeno" inverse="true" lazy="true" cascade="all">
			<key column="[GroupNo]" />
			<one-to-many class="TLMORM00009"/>
		</bag>
	</class>

  <!--TLMDAO00015.UpdateReceiptReversal-->
  <query name="TLMDAO00015.UpdateReceiptReversal">
    update TLMORM00015 as c set
    c.DenoEntryNo = :entryNo,
    c.Reverse = true,
    c.UpdatedUserId = :updatedUserId,
    c.UpdatedDate = :updatedDate
    where c.AccountType = :accountNo
    and c.ReceiptNo = :receiptNo
    and c.Status = 'R'
    and c.Active = true
  </query>

  <query name="TLMDAO00015.SelectCashDenoDatasForCenterTableDepositByDate">
    select new cashdenodto
    (
    cashdeno.DenoEntryNo,
    cashdeno.TlfEntryNo,
    cashdeno.AccountType,
    cashdeno.ReceiptNo,
    cashdeno.FromType,
    cashdeno.CashDate,
    cashdeno.SettlementDate,
    cashdeno.CounterNo,
    cashdeno.Status,
    cashdeno.Reverse,
    cashdeno.DenoDetail,
    cashdeno.DenoRate,
    cashdeno.SourceBranchCode,
    cashdeno.Currency,
    cashdeno.Amount,
    cashdeno.UserNo,
    cashdeno.Rate
    )

    from TLMORM00015 as cashdeno where
    (cashdeno.AccountType = null or cashdeno.AccountType = '') and
    cashdeno.Reverse = false and
    cashdeno.Status = :status and
    cashdeno.ReceiptNo = :receiptno and
    YEAR(cashdeno.CashDate) = YEAR(:cashdate) and
    MONTH(cashdeno.CashDate) = MONTH(:cashdate) and
    DAY(cashdeno.CashDate) = DAY(:cashdate) and
    cashdeno.SourceBranchCode=:sourcebr and
    cashdeno.Active = true
  </query>

<!--//SelectAll CashDeno//-->
<query name="TLMDAO00015.SelectAll">
  select new cashdenodto
  (
  cashdeno.Id
  ,cashdeno.DenoEntryNo
  ,cashdeno.TlfEntryNo
  ,cashdeno.AccountType
  ,cashdeno.FromType
  ,cashdeno.BranchCode
  ,cashdeno.ReceiptNo
  ,cashdeno.Amount
  ,cashdeno.AdjustAmount
  ,cashdeno.CashDate
  ,cashdeno.DenoDetail
  ,cashdeno.DenoRefundDetail
  ,cashdeno.UserNo
  ,cashdeno.CounterNo
  ,cashdeno.Status
  ,cashdeno.Reverse
  ,cashdeno.UniqueId
  ,cashdeno.SourceBranchCode
  ,cashdeno.Currency
  ,cashdeno.DenoRate
  ,cashdeno.DenoRefundRate
  ,cashdeno.SettlementDate
  ,cashdeno.AllDenoRate
  ,cashdeno.Rate
  ,cashdeno.Active
  ,cashdeno.CreatedDate
  ,cashdeno.CreatedUserId
  ,cashdeno.UpdatedDate
  ,cashdeno.UpdatedUserId
  )
  from TLMORM00015 as cashdeno
  where (cashdeno.FromType!='Closing Balance' or cashdeno.FromType=null or cashdeno.FromType='')
  and cashdeno.SourceBranchCode= :SourceBranchCode
  and cashdeno.Active = true
  and cashdeno.CashDate != null
</query>


	<!--"TLMDAO00015.DeleteCashDeno"-->
	<query name="TLMDAO00015.DeleteCashDeno">
    delete from TLMORM00015 where (FromType!='Closing Balance' or FromType=null or FromType='') and SourceBranchCode= :SourceBranchCode and Active = true
  </query>

	<!--TLMDAO00015.UpdateCashDeno-->
	<query name="TLMDAO00015.UpdateCashDeno">
    update TLMORM00015 c set
    c.CashDate = :cashDate,
    c.DenoDetail = :denodetail,
    c.DenoRate = :denorate,
    c.DenoRefundDetail = :denorefunddetail,
    c.DenoRefundRate = :denorefundrate,
    c.AdjustAmount = :adjustAmount,
    c.UserNo = :userno,
    c.CounterNo = :counterNo,
    c.Rate = :rate,
    c.UpdatedUserId = :updateduserid,
    c.UpdatedDate = :updatedDate
    where c.TlfEntryNo = :entryNo
    and (c.CashDate = null or c.CashDate = '')
    and c.Status = :status
    and c.Reverse = false
    and c.Active = true
  </query>
	
	<!--TLMDAO00015.SelectOnlineCashDenoEntry.DepoDeno-->
	<query name="TLMDAO00015.SelectOnlineCashDenoEntry">
    select new cashdenodto
    (
    c.TlfEntryNo,
    c.CashDate,
    c.Amount,
    c.Currency
    )
    from TLMORM00015 as c
    where substring(c.TlfEntryNo,1,2) != :rd and (c.CashDate = null or c.CashDate = '')
    and c.SourceBranchCode = :sourceBr
    and c.Status = :status
    and (
    substring(c.TlfEntryNo,1,3) = :ibl or
    (substring(c.TlfEntryNo,1,1) = :groupno and c.TlfEntryNo in
    (select distinct d.GroupNo from TLMORM00009 as d where (d.Tlf_Eno != null and d.Tlf_Eno != '') and d.GroupNo = c.TlfEntryNo))
    )
    and c.Reverse = false
    and c.Active = true
  </query>

	<query name="TLMDAO00015.CheckEntryNo">
    select new cashdenodto
    (
    c.TlfEntryNo,
    c.Active
    )
    from TLMORM00015 as c
    where substring(c.TlfEntryNo,1,2) != :rd
    and (c.CashDate = null or c.CashDate = '')
    and c.TlfEntryNo = :entryno
    and c.Reverse = false
    and c.Active = true
  </query>

	<!--TLMDAO00015.SelectOnlineCashDenoEntry.IBLTLF-->
	<query name="TLMDAO00015.SelectOnlineCashDenoEntry.IBLTLF">
    select new cashdenodto
    (
    c.TlfEntryNo,
    c.CashDate,
    it.AccountNo,
    it.Amount,
    it.Income,
    it.Communicationcharge,
    it.Currency
    )
    from TLMORM00015 as c
    inner join c.IblTlf as it
    where c.TlfEntryNo = it.Eno
    and substring(c.TlfEntryNo,1,2) != :rd and (c.CashDate is null or c.CashDate = '')
    and c.Status = :status
    and substring(c.TlfEntryNo,1,3) = :ibl
    and c.Reverse = false
    and c.Active = true
  </query>

  <query name="CXDAO00006.UpdateCashDenoByENO">
    update TLMORM00015 cashdeno set
    cashdeno.DenoEntryNo = :ReversalENO,
    cashdeno.Reverse =true,
    cashdeno.UpdatedUserId= :UpdatedUserId,
    cashdeno.UpdatedDate= :updatedDate
    where cashdeno.TlfEntryNo =:ENO
    and cashdeno.SourceBranchCode= :SourceBranchCode
    and cashdeno.Reverse=false
    and cashdeno.Active=true
    and (cashdeno.DenoEntryNo = null or cashdeno.DenoEntryNo = '')
  </query>

<query name="CXDAO00006.UpdateCashDenoByAcType">
    update TLMORM00015 cashdeno set
    cashdeno.DenoEntryNo = :ReversalENO,
    cashdeno.Reverse =true,
    cashdeno.UpdatedUserId= :UpdatedUserId,
    cashdeno.UpdatedDate= :updatedDate
    where cashdeno.AccountType =:AcType
    and cashdeno.SourceBranchCode= :SourceBranchCode
    and cashdeno.Reverse=false
    and cashdeno.Active=true
    and (cashdeno.DenoEntryNo = null or cashdeno.DenoEntryNo = '')
  </query>
  <query name="CXDAO00006.DeleteCashDenoByTLF_enoSourceBrReverse">
    update TLMORM00015 cashdeno set
    cashdeno.UpdatedUserId= :UpdatedUserId,
    cashdeno.UpdatedDate= :UpdatedDate,
    cashdeno.Active=false
    where cashdeno.TlfEntryNo =:ENO
    and cashdeno.SourceBranchCode= :SourceBranchCode
    and cashdeno.Reverse=0
    and cashdeno.Active=true
  </query>

  <query name="TLMDAO00015.SelectHomeAmountByBranch">
    select new cashdenodto
    (
    c.Status,
    c.Amount,
    c.Rate,
    c.DenoDetail,
    c.DenoRefundDetail
    )
    from TLMORM00015 as c
    where Convert(char(10),c.SettlementDate,111) = Convert(char(10),:settlementDate,111)
    and c.SourceBranchCode = :branchCode
    and c.Currency = :currency
    and c.Reverse = false
    and c.Active = true
    and c.AccountType = :temp
  </query>

  <query name="CXDAO00006.SelectCashDenoByGroupNo">
    select new cashdenodto(
    cashdeno.Id
    ,cashdeno.DenoEntryNo
    ,cashdeno.TlfEntryNo
    ,cashdeno.AccountType
    ,cashdeno.FromType
    ,cashdeno.BranchCode
    ,cashdeno.ReceiptNo
    ,cashdeno.Amount
    ,cashdeno.AdjustAmount
    ,cashdeno.CashDate
    ,cashdeno.DenoDetail
    ,cashdeno.DenoRefundDetail
    ,cashdeno.UserNo
    ,cashdeno.CounterNo
    ,cashdeno.Status
    ,cashdeno.Reverse
    ,cashdeno.UniqueId
    ,cashdeno.SourceBranchCode
    ,cashdeno.Currency
    ,cashdeno.DenoRate
    ,cashdeno.DenoRefundRate
    ,cashdeno.SettlementDate
    ,cashdeno.AllDenoRate
    ,cashdeno.Rate
    ,cashdeno.Active
    ,cashdeno.CreatedDate
    ,cashdeno.CreatedUserId
    ,cashdeno.UpdatedDate
    ,cashdeno.UpdatedUserId
    )
    from TLMORM00015 as cashdeno
    where
    cashdeno.TlfEntryNo= :GroupNo
    and cashdeno.Active=true
    and cashdeno.Reverse =0  
    and cashdeno.SourceBranchCode= :SourceBranchCode
  </query>

	<!--Withdraw Reversal--><!-- ASDA-->
	<query name="CXDAO00006.SelectCashDenoByGroupNoAndStatus">
		select new cashdenodto(
		cashdeno.Id
		,cashdeno.DenoEntryNo
		,cashdeno.TlfEntryNo
		,cashdeno.AccountType
		,cashdeno.FromType
		,cashdeno.BranchCode
		,cashdeno.ReceiptNo
		,cashdeno.Amount
		,cashdeno.AdjustAmount
		,cashdeno.CashDate
		,cashdeno.DenoDetail
		,cashdeno.DenoRefundDetail
		,cashdeno.UserNo
		,cashdeno.CounterNo
		,cashdeno.Status
		,cashdeno.Reverse
		,cashdeno.UniqueId
		,cashdeno.SourceBranchCode
		,cashdeno.Currency
		,cashdeno.DenoRate
		,cashdeno.DenoRefundRate
		,cashdeno.SettlementDate
		,cashdeno.AllDenoRate
		,cashdeno.Rate
		,cashdeno.Active
		,cashdeno.CreatedDate
		,cashdeno.CreatedUserId
		,cashdeno.UpdatedDate
		,cashdeno.UpdatedUserId
		)
		from TLMORM00015 as cashdeno
		where
		cashdeno.TlfEntryNo= :GroupNo
		and cashdeno.Status = :status
		and cashdeno.Active=true
		and cashdeno.Reverse =0
		and cashdeno.SourceBranchCode= :SourceBranchCode
	</query>

	

	<!--for TCMVEW00007(Last Payment Denomination Entry)-->
	<query name="TLMDAO00015.SelectCashDenoData">
		select new cashdenodto
		(
		cashdeno.DenoEntryNo,
		cashdeno.TlfEntryNo,
		cashdeno.AccountType,
		cashdeno.ReceiptNo,
		cashdeno.FromType,
		cashdeno.CashDate,
		cashdeno.SettlementDate,
		cashdeno.UserNo,
		cashdeno.CounterNo,
		cashdeno.Status,
		cashdeno.Reverse,
		cashdeno.DenoDetail,
		cashdeno.DenoRefundDetail,
		cashdeno.DenoRate,
		cashdeno.SourceBranchCode,
		cashdeno.Currency,
		cashdeno.Amount,
		cashdeno.Rate,
		cashdeno.DenoRefundRate,
		cashdeno.AllDenoRate
		)
		from TLMORM00015 as cashdeno where
		cashdeno.TlfEntryNo = :tlfEno  and
		cashdeno.Status = :status and
		cashdeno.SourceBranchCode = :sourceBranch and
    cashdeno.Active = true

	</query>
  
  <!--TLMDAO00015.Select CounterNo By AcType-->
  <query name="TLMDAO00015.SelectCounterNoByAcType">
    select cashdeno.CounterNo from TLMORM00015 as cashdeno where
    cashdeno.AccountType = :acType and cashdeno.SourceBranchCode = :sourceBr and cashdeno.Active = true
  </query>
  
  <!--TLMDAO00015.Select By AcType And Reverse = 0-->
  <query name="TLMDAO00015.SelectByAcTypeAndNotReverse">
    select new cashdenodto(
    cashdeno.Id
    ,cashdeno.DenoEntryNo
    ,cashdeno.TlfEntryNo
    ,cashdeno.AccountType
    ,cashdeno.FromType
    ,cashdeno.BranchCode
    ,cashdeno.ReceiptNo
    ,cashdeno.Amount
    ,cashdeno.AdjustAmount
    ,cashdeno.CashDate
    ,cashdeno.DenoDetail
    ,cashdeno.DenoRefundDetail
    ,cashdeno.UserNo
    ,cashdeno.CounterNo
    ,cashdeno.Status
    ,cashdeno.Reverse
    ,cashdeno.UniqueId
    ,cashdeno.SourceBranchCode
    ,cashdeno.Currency
    ,cashdeno.DenoRate
    ,cashdeno.DenoRefundRate
    ,cashdeno.SettlementDate
    ,cashdeno.AllDenoRate
    ,cashdeno.Rate
    ,cashdeno.Active
    ,cashdeno.CreatedDate
    ,cashdeno.CreatedUserId
    ,cashdeno.UpdatedDate
    ,cashdeno.UpdatedUserId
    )
    from TLMORM00015 as cashdeno where
    cashdeno.AccountType = :acType and cashdeno.SourceBranchCode = :sourceBr and cashdeno.Reverse = false and cashdeno.Active = true
  </query>

  <!--for TCMVEW00007(Last Payment Denomination Entry)-->
  <query name="TLMDAO00015.SelectCashDenoInfoByACType">
    select new cashdenodto
    (
    cashdeno.DenoEntryNo,
    cashdeno.TlfEntryNo,
    cashdeno.AccountType,
    cashdeno.ReceiptNo,
    cashdeno.FromType,
    cashdeno.CashDate,
    cashdeno.SettlementDate,
    cashdeno.UserNo,
    cashdeno.CounterNo,
    cashdeno.Status,
    cashdeno.Reverse,
    cashdeno.DenoDetail,
    cashdeno.DenoRefundDetail,
    cashdeno.DenoRate,
    cashdeno.SourceBranchCode,
    cashdeno.Currency,
    cashdeno.Amount,
    cashdeno.Rate,
    cashdeno.DenoRefundRate,
    cashdeno.AllDenoRate
    )
    from TLMORM00015 as cashdeno where
    cashdeno.AccountType = :actype  and
    cashdeno.SourceBranchCode = :sourceBranchCode and
    cashdeno.Reverse = false and
    cashdeno.Active = true
  </query>

	<!--<sql-query name="StoreProcedure_INS_CASHDENO">
		exec dbo.INS_CASHDENO :receiptNo,:denoEno,:tlfEno,:acType,:fromType,:branchcode,:amount,:adjustAmt,:denoDetail,:denorefundDetail,:userNo,:counterNo,:status,:reverse,:registerNo,:sourceBranch,:currency,:denoRate,:denorefundRate,:settlementDate,:rate,:createduserId
	</sql-query>-->
  
  <!--TLMDAO00015.Delete by ACType-->
  <query name="TLMDAO00015.DeleteByACType">
    update TLMORM00015 c
    set c.Active = false,
 c.Reverse = true,
    c.UpdatedDate = :updatedDate,
    c.UpdatedUserId = :updatedUserId
    where 
    c.AccountType = :acType and c.Reverse = false and c.SourceBranchCode = :sourceBr and c.Active = true
  </query>

  <!--TLMDAO00015.Delete by TlfEno-->
  <query name="TLMDAO00015.DeleteByTlfEno">
    update TLMORM00015 c
    set c.Active = false,
 c.Reverse=true,
    c.UpdatedDate = :updatedDate,
    c.UpdatedUserId = :updatedUserId
    where
    c.TlfEntryNo = :tlfEno and c.Reverse = false and c.SourceBranchCode = :sourceBr and c.Active = true
  </query>
  
  <!--Update CashDeno by TlfEno-->
  <query name="TLMDAO00015.UpdateCashDenoByTlfEno">
    update TLMORM00015 c
    set c.Amount = :amount,
    c.AdjustAmount = :adjustAmount,
    c.DenoDetail = :denoDetail,
    c.DenoRefundDetail = :denoRefundDetail,
    c.DenoRate = :denoRate,
    c.DenoRefundRate = :denoRefundRate,
    c.UpdatedDate = :updatedDate,
    c.UpdatedUserId = :updatedUserId
    where c.TlfEntryNo = :tlfEno and c.Reverse = false and c.SourceBranchCode = :sourceBr and c.Active = true
  </query>


  <!--Update CashDeno by TlfEno-->
  <query name="TLMDAO00015.UpdateCashDenoByACType">
    update TLMORM00015 c
    set c.Amount = :amount,
    c.AdjustAmount = :adjustAmount,
    c.DenoDetail = :denoDetail,
    c.DenoRefundDetail = :denoRefundDetail,
    c.DenoRate = :denoRate,
    c.DenoRefundRate = :denoRefundRate,
    c.UpdatedDate = :updatedDate,
    c.UpdatedUserId = :updatedUserId,
    c.CashDate = :updatedDate
    where c.AccountType = :acType and c.Reverse = false and c.SourceBranchCode = :sourceBr and c.Active = true
  </query>
  
  <!--Select Amount By TlfEno-->
  <query name="TLMDAO00015.SelectAmountByTlfEno">
    select c.Amount from TLMORM00015 as c
    where c.TlfEntryNo = :tlfEno and c.Reverse = false and c.SourceBranchCode = :sourceBr and c.Active = true
  </query>

  <!--Select Amount By ACType-->
  <query name="TLMDAO00015.SelectAmountByACType">
    select c.Amount from TLMORM00015 as c
    where c.AccountType = :acType and c.Reverse = false and c.SourceBranchCode = :sourceBr and c.Active = true
  </query>


	<query name="TLMDAO00015.UpdateCashDenoByTlfEnoAndCashDate">
		update TLMORM00015 c
		set c.DenoEntryNo = :eno,
		c.UpdatedDate = :updatedDate,
		c.UpdatedUserId = :updatedUserId,
		c.Reverse = true
		where c.TlfEntryNo = :tlfEno
		and c.Reverse = false
		and c.SourceBranchCode = :sourceBr
		and c.Active = true
		and convert(char(10),c.CashDate,111) = convert(char(10),:cashdate,111)
	</query>

	<!-- PO Edit-->
	<query name="TLMDAO00015.SelectCashDenoAndDepoDenoDatas">
		select new cashdenodto
		(
		cashdeno.DenoEntryNo,
		cashdeno.TlfEntryNo,
		cashdeno.AccountType,
		cashdeno.ReceiptNo,
		cashdeno.FromType,
		cashdeno.CashDate,
		cashdeno.SettlementDate,
		cashdeno.CounterNo,
		cashdeno.Status,
		cashdeno.Reverse,
		cashdeno.DenoDetail,
		cashdeno.DenoRate,
		cashdeno.SourceBranchCode,
		cashdeno.Currency,
		cashdeno.Amount,
		cashdeno.UserNo,
		cashdeno.Rate
		)

		from TLMORM00015 as cashdeno,TLMORM00009 as depodeno where
		cashdeno.TlfEntryNo = depodeno.GroupNo and
		cashdeno.TlfEntryNo = :groupNo and
		cashdeno.SourceBranchCode = :sourceBranch and
		cashdeno.Active = true 
	</query>

  <!-- PO Edit-->
  <query name="TLMDAO00015.GetCashDenoForPOReversal">
    select new cashdenodto
    (
    cashdeno.DenoEntryNo,
    cashdeno.TlfEntryNo,
    cashdeno.AccountType,
    cashdeno.ReceiptNo,
    cashdeno.FromType,
    cashdeno.CashDate,
    cashdeno.SettlementDate,
    cashdeno.CounterNo,
    cashdeno.Status,
    cashdeno.Reverse,
    cashdeno.DenoDetail,
    cashdeno.DenoRate,
    cashdeno.SourceBranchCode,
    cashdeno.Currency,
    cashdeno.Amount,
    cashdeno.UserNo,
    cashdeno.Rate
    )

    from TLMORM00015 as cashdeno where
    cashdeno.TlfEntryNo = :groupNo and
    cashdeno.SourceBranchCode = :sourceBranch and
    cashdeno.Active = true
  </query>

  <!-- Drawing Remittance Voucher To check Group Denomination-->
  <query name="TLMDAO00015.SelectCashDenoAndDepoDenoDatasForDrawingVoucher">
    select new cashdenodto
    (
    cashdeno.TlfEntryNo,
    cashdeno.CashDate,
    cashdeno.SettlementDate
    )
    from TLMORM00015 as cashdeno,TLMORM00009 as depodeno where
    cashdeno.TlfEntryNo = depodeno.GroupNo
    <!--and depodeno.GroupNo = 'G1308140021'-->
    and depodeno.AccountType = :registerNo
    and cashdeno.SourceBranchCode = :sourceBranch
    and cashdeno.Active = true
    and depodeno.Active = true
  </query>
 
  <query name="TLMDAO00015.SelectMultiPO">
		select new cashdenodto
		(
		cashdeno.DenoEntryNo,
		cashdeno.TlfEntryNo,
		cashdeno.AccountType,
		cashdeno.ReceiptNo,
		cashdeno.FromType,
		cashdeno.CashDate,
		cashdeno.SettlementDate,
		cashdeno.CounterNo,
		cashdeno.Status,
		cashdeno.Reverse,
		cashdeno.DenoDetail,
		cashdeno.DenoRate,
		cashdeno.SourceBranchCode,
		cashdeno.Currency,
		cashdeno.Amount,
		cashdeno.UserNo,
		cashdeno.Rate
		)

		from TLMORM00015 as cashdeno,TLMORM00009 as depodeno where
		cashdeno.TlfEntryNo = depodeno.GroupNo and
		depodeno.AccountType=:poNo and
		depodeno.GroupNo = :groupNo and
		cashdeno.Status=:status and
		cashdeno.SourceBranchCode = :sourceBranch and
		cashdeno.Reverse = false and
		cashdeno.Active = true
	</query>

	<query name="TLMDAO00015.SelectSinglePO">
		select new cashdenodto
		(
		cashdeno.DenoEntryNo,
		cashdeno.TlfEntryNo,
		cashdeno.AccountType,
		cashdeno.ReceiptNo,
		cashdeno.FromType,
		cashdeno.CashDate,
		cashdeno.SettlementDate,
		cashdeno.CounterNo,
		cashdeno.Status,
		cashdeno.Reverse,
		cashdeno.DenoDetail,
		cashdeno.DenoRate,
		cashdeno.SourceBranchCode,
		cashdeno.Currency,
		cashdeno.Amount,
		cashdeno.UserNo,
		cashdeno.Rate
		)

		from TLMORM00015 as cashdeno where
		cashdeno.AccountType = :poNo and
		cashdeno.Status=:status and
		cashdeno.Reverse = false and
		cashdeno.SourceBranchCode = :sourceBranch and
		cashdeno.Active = true
	</query>

  <query name="TLMDAO00015.SelectByEno">
    select new cashdenodto
    (
    cashdeno.DenoEntryNo,
    cashdeno.TlfEntryNo,
    cashdeno.AccountType,
    cashdeno.ReceiptNo,
    cashdeno.FromType,
    cashdeno.CashDate,
    cashdeno.SettlementDate,
    cashdeno.CounterNo,
    cashdeno.Status,
    cashdeno.Reverse,
    cashdeno.DenoDetail,
    cashdeno.DenoRate,
    cashdeno.SourceBranchCode,
    cashdeno.Currency,
    cashdeno.Amount,
    cashdeno.UserNo,
    cashdeno.Rate
    )

    from TLMORM00015 as cashdeno where
    cashdeno.TlfEntryNo = :eno and
    cashdeno.SourceBranchCode = :sourceBranch and
    cashdeno.Active = true
  </query>

  <query name="TLMDAO00015.UpdateCashDenoByDenoEntryNo">
    update TLMORM00015 c
    set c.DenoEntryNo = :voucherNo,
    c.UpdatedDate = :updatedDate,
    c.UpdatedUserId = :updatedUserId,
    c.Reverse = true
    where c.TlfEntryNo = :orgnEno
    and c.AccountType=:poNo
    and c.Reverse = false
    and c.Status=:status
    and c.SourceBranchCode = :sourceBranch
    and c.Active = true
   
  </query>

	<query name="TLMDAO00015.UpdateCashDenoByTlfEntryNo">
		update TLMORM00015 c
		set c.DenoEntryNo = :voucherNo,
		c.UpdatedDate = :updatedDate,
		c.UpdatedUserId = :updatedUserId,
		c.Reverse = true
		where c.TlfEntryNo = :groupNo
		and c.Reverse = false
		and c.Status=:status
		and c.SourceBranchCode = :sourceBranch
		and c.Active = true

	</query>
<!--IndividualDenoDelete-->
	<!--TLMDAO00015.SelectCashDenoByEntryNo-->
	<query name="TLMDAO00015.SelectCashDenoByEntryNo">
		select new cashdenodto(
		cashdeno.Id
		,cashdeno.DenoEntryNo
		,cashdeno.TlfEntryNo
		,cashdeno.AccountType
		,cashdeno.FromType
		,cashdeno.BranchCode
		,cashdeno.ReceiptNo
		,cashdeno.Amount
		,cashdeno.AdjustAmount
		,cashdeno.CashDate
		,cashdeno.DenoDetail
		,cashdeno.DenoRefundDetail
		,cashdeno.UserNo
		,cashdeno.CounterNo
		,cashdeno.Status
		,cashdeno.Reverse
		,cashdeno.UniqueId
		,cashdeno.SourceBranchCode
		,cashdeno.Currency
		,cashdeno.DenoRate
		,cashdeno.DenoRefundRate
		,cashdeno.SettlementDate
		,cashdeno.AllDenoRate
		,cashdeno.Rate
		,cashdeno.Active
		,cashdeno.TS
		,cashdeno.CreatedDate
		,cashdeno.CreatedUserId
		,cashdeno.UpdatedDate
		,cashdeno.UpdatedUserId
		)
		from TLMORM00015 as cashdeno where
		cashdeno.TlfEntryNo = :entryNo
		and cashdeno.SourceBranchCode = :sourceBranchCode
		<!--and convert(char(10),c.CashDate,111) = convert(char(10),:cashdate,111)-->
		and cashdeno.Reverse = 0
		and cashdeno.Active = true
	</query>
	
	<!--"TLMDAO00015.DeleteCashDenoByEntryNo"-->
	<query name="TLMDAO00015.DeleteCashDenoByEntryNo">
		delete from TLMORM00015 where TlfEntryNo = :entryNo and SourceBranchCode= :sourceBranchCode and Active = true
	</query>

	<query name="TLMDAO00015.UpdateCashDenoByAccountType">
		update TLMORM00015 c
		set c.DenoEntryNo = :voucherNo,
		c.UpdatedDate = :updatedDate,
		c.UpdatedUserId = :updatedUserId,
		c.Reverse = true
		where c.AccountType = :poNo
		and c.Reverse = false
		and c.Status=:status
		and c.SourceBranchCode = :sourceBranch
		and c.Active = true

	</query>

	<!--DenoEdit.SelectCashDenoDataByTLFEno-->
	<query name="DenoEdit.SelectCashDenoDataByTLFEno">
		select new cashdenodto
		(
		cashdeno.Id
		,cashdeno.DenoEntryNo
		,cashdeno.TlfEntryNo
		,cashdeno.AccountType
		,cashdeno.FromType
		,cashdeno.BranchCode
		,cashdeno.ReceiptNo
		,cashdeno.Amount
		,cashdeno.AdjustAmount
		,cashdeno.CashDate
		,cashdeno.DenoDetail
		,cashdeno.DenoRefundDetail
		,cashdeno.UserNo
		,cashdeno.CounterNo
		,cashdeno.Status
		,cashdeno.Reverse
		,cashdeno.UniqueId
		,cashdeno.SourceBranchCode
		,cashdeno.Currency
		,cashdeno.DenoRate
		,cashdeno.DenoRefundRate
		,cashdeno.SettlementDate
		,cashdeno.AllDenoRate
		,cashdeno.Rate
		,cashdeno.Active
		,cashdeno.TS
		,cashdeno.CreatedDate
		,cashdeno.CreatedUserId
		,cashdeno.UpdatedDate
		,cashdeno.UpdatedUserId
		)
		from TLMORM00015 as cashdeno
		where cashdeno.TlfEntryNo = :tlfeno
		and cashdeno.Reverse = false
		and cashdeno.SourceBranchCode = :sourcebranchcode
		and cashdeno.Active = true
	</query>

	<!--"TLMDAO00015.UpdateCashDenoEdit"-->
	<query name="TLMDAO00015.UpdateCashDenoEdit">
    update TLMORM00015 c
    set c.TlfEntryNo = :tlfeno,
    c.UpdatedDate = :updatedDate,
    c.UpdatedUserId = :updatedUserId,
    c.Reverse = true,
    c.DenoEntryNo=:denoENo
    where c.TlfEntryNo = :tlfeno
    and c.Status=:status
    and c.SourceBranchCode = :sourceBranch
    and convert(char(10),c.CashDate,111) = convert(char(10),:cashdate,111)
    and c.Active = true

  </query>

	<query name="TLMDAO00015.SelectAllBySourcebrAndDatetimeAndStatus">
		select new cashdenodto
		(
		cashdeno.Id
		,cashdeno.DenoEntryNo
		,cashdeno.TlfEntryNo
		,cashdeno.AccountType
		,cashdeno.FromType
		,cashdeno.BranchCode
		,cashdeno.ReceiptNo
		,cashdeno.Amount
		,cashdeno.AdjustAmount
		,cashdeno.CashDate
		,cashdeno.DenoDetail
		,cashdeno.DenoRefundDetail
		,cashdeno.UserNo
		,cashdeno.CounterNo
		,cashdeno.Status
		,cashdeno.Reverse
		,cashdeno.UniqueId
		,cashdeno.SourceBranchCode
		,cashdeno.Currency
		,cashdeno.DenoRate
		,cashdeno.DenoRefundRate
		,cashdeno.SettlementDate
		,cashdeno.AllDenoRate
		,cashdeno.Rate
		,cashdeno.Active
		,cashdeno.TS
		,cashdeno.CreatedDate
		,cashdeno.CreatedUserId
		,cashdeno.UpdatedDate
		,cashdeno.UpdatedUserId
		)
		from TLMORM00015 as cashdeno
		where cashdeno.SourceBranchCode = :sourcebranchcode
		and convert(char(10),cashdeno.CashDate, 111) between :startDate and :endDate
		and cashdeno.Status = :status and cashdeno.Active = true
	</query>

	<query name="TLMDAO00015.SelectAllBySourcebrAndDatetime">
		select new cashdenodto
		(
		cashdeno.Id
		,cashdeno.DenoEntryNo
		,cashdeno.TlfEntryNo
		,cashdeno.AccountType
		,cashdeno.FromType
		,cashdeno.BranchCode
		,cashdeno.ReceiptNo
		,cashdeno.Amount
		,cashdeno.AdjustAmount
		,cashdeno.CashDate
		,cashdeno.DenoDetail
		,cashdeno.DenoRefundDetail
		,cashdeno.UserNo
		,cashdeno.CounterNo
		,cashdeno.Status
		,cashdeno.Reverse
		,cashdeno.UniqueId
		,cashdeno.SourceBranchCode
		,cashdeno.Currency
		,cashdeno.DenoRate
		,cashdeno.DenoRefundRate
		,cashdeno.SettlementDate
		,cashdeno.AllDenoRate
		,cashdeno.Rate
		,cashdeno.Active
		,cashdeno.TS
		,cashdeno.CreatedDate
		,cashdeno.CreatedUserId
		,cashdeno.UpdatedDate
		,cashdeno.UpdatedUserId
		)
		from TLMORM00015 as cashdeno
		where cashdeno.SourceBranchCode = :sourcebranchcode
		and convert(char(10),cashdeno.CashDate, 111) between :startDate and :endDate
		and cashdeno.Active = true
	</query>

	
	<query name="TLMDAO00015.DeleteCashDenoByDatetimeAndStatus">
		delete from TLMORM00015 where SourceBranchCode = :sourcebranchcode
		and convert(char(10),CashDate, 111) between :startDate and :endDate
		and Status = :status and Active = true
	</query>

	<query name="TLMDAO00015.DeleteCashDenoByDatetime">
		delete from TLMORM00015 where SourceBranchCode = :sourcebranchcode
		and convert(char(10),CashDate, 111) between :startDate and :endDate
		and Active = true
	</query>
  
  <!--TLMDAO00015.UpdateReceiptNoInCenterTableApprove-->
  <query name="TLMDAO00015.UpdateReceiptNoInCenterTableApprove">
    update TLMORM00015 c
    set
    c.UpdatedDate = :updatedDate,
    c.UpdatedUserId = :updatedUserId
    where c.TlfEntryNo = :tlfeno
    and c.SourceBranchCode = :sourceBr
    and c.Active = true
  </query>
  
  <!--//TLMDAO00015.SelectMaxId//-->
  <query name="TLMDAO00015.SelectMaxId">
    select new cashdenodto(
    Max(c.Id)
    )
    from TLMORM00015 as c
  </query>

  <!--for TCMVEW00075(Cash Payment Denomination Entry)-->
  <query name="TLMDAO00015.SelectCashDenoDataByIsNotNullCashDate">
    select new cashdenodto
    (
    cashdeno.DenoEntryNo,
    cashdeno.TlfEntryNo,
    cashdeno.AccountType,
    cashdeno.ReceiptNo,
    cashdeno.FromType,
    cashdeno.CashDate,
    cashdeno.SettlementDate,
    cashdeno.UserNo,
    cashdeno.CounterNo,
    cashdeno.Status,
    cashdeno.Reverse,
    cashdeno.DenoDetail,
    cashdeno.DenoRefundDetail,
    cashdeno.DenoRate,
    cashdeno.SourceBranchCode,
    cashdeno.Currency,
    cashdeno.Amount,
    cashdeno.Rate,
    cashdeno.DenoRefundRate,
    cashdeno.AllDenoRate
    )
    from TLMORM00015 as cashdeno where
    cashdeno.TlfEntryNo = :tlfEno  and
    cashdeno.CashDate != null and
    cashdeno.Status = :status and
    cashdeno.SourceBranchCode = :sourceBranch and
    cashdeno.Active = true
  </query>

  <!--According Update by Group No In Cash Payment Denomination Entry-->
  <query name="TLMDAO00015.UpdateCashDenoWithGroupNo">
    update TLMORM00015 c
    set c.CashDate = :cashdate,
    c.DenoDetail = :denodetail,
    <!--c.DenoRefundDetail = :denorefunddetail,-->
    c.DenoRate= :denorate,
    c.Rate = :rate,
    c.SettlementDate =:settlementDate,
    <!--c.DenoRefundRate= :denorefundrate,-->
    c.AdjustAmount =:adjustamount,
    c.UserNo= :userno,
    c.CounterNo =:counterno,
    c.AllDenoRate =:alldenorate,
    c.UpdatedDate = :updatedDate,
    c.UpdatedUserId = :updatedUserId
    where c.TlfEntryNo = :groupNo
    and c.Status=:status
    and c.SourceBranchCode = :sourceBranch
    and c.Active = true
  </query>
  
  <!--for Single TLMVEW00076(Drawing Cash Deposit Denomination Entry)-->
  <query name="TLMDAO00015.SelectCashDenoDatasByAccountType">
    select new cashdenodto
    (
    cashdeno.AccountType,
    cashdeno.CashDate,
    cashdeno.Amount,
    cashdeno.Reverse,
    cashdeno.Currency
    )
    from TLMORM00015 as cashdeno where
    cashdeno.AccountType = :actype and
    cashdeno.SourceBranchCode = :sourceBranch and
    cashdeno.Active = true
  </query>
  
  <!--for Multiple TLMVEW00076(Drawing Cash Deposit Denomination Entry)-->
  <query name="TLMDAO00015.SelectCashDenoDatasByTLFENo">
    select new cashdenodto
    (
    cashdeno.TlfEntryNo,
    cashdeno.CashDate,
    cashdeno.Amount,
    cashdeno.Reverse,
    cashdeno.Currency
    )
    from TLMORM00015 as cashdeno where
    cashdeno.TlfEntryNo = :tlfeno and
    cashdeno.SourceBranchCode = :sourceBranch and
    cashdeno.Active = true
  </query>

  <!-- TLMVEW00076(Drawing Cash Deposit Denomination Entry)-->
  <query name="TLMDAO00015.UpdateCashDenoByAccountTypeAndReverse">
    update TLMORM00015 c
    set c.CashDate = :cashdate,
    c.DenoDetail = :denodetail,
    c.DenoRefundDetail = :denorefunddetail,
    c.DenoRate= :denorate,
    c.Rate = :rate,
    c.SettlementDate =:settlementDate,
    c.DenoRefundRate= :denorefundrate,
    c.AdjustAmount =:adjustamount,
    c.UserNo= :userno,
    c.CounterNo =:counterno,
    c.AllDenoRate =:alldenorate,
    c.UpdatedDate = :updatedDate,
    c.UpdatedUserId = :updatedUserId
    where c.AccountType = :atype
    and c.Reverse = false
    and c.SourceBranchCode = :sourceBranch
    and c.Active = true
  </query>

  <!-- Multiple TLMVEW00076(Drawing Cash Deposit Denomination Entry)-->
  <query name="TLMDAO00015.UpdateCashDenoByTLFENOAndReverse">
    update TLMORM00015 c
    set c.CashDate = :cashdate,
    c.DenoDetail = :denodetail,
    c.DenoRefundDetail = :denorefunddetail,
    c.DenoRate= :denorate,
    c.Rate = :rate,
    c.SettlementDate =:settlementDate,
    c.DenoRefundRate= :denorefundrate,
    c.AdjustAmount =:adjustamount,
    c.UserNo= :userno,
    c.CounterNo =:counterno,
    c.AllDenoRate =:alldenorate,
    c.UpdatedDate = :updatedDate,
    c.UpdatedUserId = :updatedUserId
    where c.TlfEntryNo = :groupno
    and c.Reverse = false
    and c.SourceBranchCode = :sourceBranch
    and c.Active = true
  </query>

	<!--TLMDAO00015.UpdateCashDenoForReversalDelete-->
	<query name="TLMDAO00015.UpdateCashDenoForReversalDelete">
		update TLMORM00015 c
		set c.DenoEntryNo = :ReversalVoucherNo,
		c.Reverse = true,
		c.Active = false,
		c.UpdatedDate = :updatedDate,
		c.UpdatedUserId = :updatedUserId
		where
		c.AccountType = :acType	 and c.Reverse = false and c.SourceBranchCode = :sourceBr
	</query>

	<!--MNMSVE00023 - individual transaction reverse (ASDA)-->
	<query name="TLMDAO00015.UpdateCashDenoForAmountEdit">
		update TLMORM00015 cashdeno set
		cashdeno.DenoEntryNo = :ReversalENO,  
		cashdeno.Reverse =true,
		cashdeno.UpdatedUserId= :updatedUserId,
		cashdeno.UpdatedDate= :updatedDate
		where cashdeno.TlfEntryNo =:tlfEno
		and cashdeno.SourceBranchCode= :sourceBr
		and cashdeno.Reverse=false
		and cashdeno.Active=true
		and (cashdeno.DenoEntryNo = null or cashdeno.DenoEntryNo = '')
	</query>

	<!--MNMSVE00023 - update cashdate =null (ASDA)-->
	<query name="TLMDAO00015.UpdateCashDenoByCashDateNull">
		update TLMORM00015 cashdeno set
		cashdeno.CashDate = null,		
		cashdeno.UpdatedUserId= :updatedUserId,
		cashdeno.UpdatedDate= :updatedDate
		where cashdeno.TlfEntryNo =:tlfEno
		and cashdeno.SourceBranchCode= :sourceBr
		and cashdeno.Active=true
	</query>
	
	<!--CXDAO00006  forOnlineTransactionReversalCase (ASDA)-->
	<query name="CXDAO00006.UpdateAmountForOnlineTransaction">
		update TLMORM00015 cashdeno set
		cashdeno.Amount = :amount
		where cashdeno.TlfEntryNo =:tlfEno
		and cashdeno.DenoEntryNo = :reversalEno
		and cashdeno.SourceBranchCode= :sourceBr
		and cashdeno.Active=true
	</query>

  <!--Added By ZMS For Multiple Deposit And Withdraw Reversal (19/12/2017)-->
  <query name="CXDAO00006.SelectCashDenoGroupTransactionByGroupNo">
    select new cashdenodto(
    cashdeno.Id
    ,cashdeno.DenoEntryNo
    ,cashdeno.TlfEntryNo
    ,cashdeno.AccountType
    ,cashdeno.FromType
    ,cashdeno.BranchCode
    ,cashdeno.ReceiptNo
    ,cashdeno.Amount
    ,cashdeno.AdjustAmount
    ,cashdeno.CashDate
    ,cashdeno.DenoDetail
    ,cashdeno.DenoRefundDetail
    ,cashdeno.UserNo
    ,cashdeno.CounterNo
    ,cashdeno.Status
    ,cashdeno.Reverse
    ,cashdeno.UniqueId
    ,cashdeno.SourceBranchCode
    ,cashdeno.Currency
    ,cashdeno.DenoRate
    ,cashdeno.DenoRefundRate
    ,cashdeno.SettlementDate
    ,cashdeno.AllDenoRate
    ,cashdeno.Rate
    ,cashdeno.Active
    ,cashdeno.CreatedDate
    ,cashdeno.CreatedUserId
    ,cashdeno.UpdatedDate
    ,cashdeno.UpdatedUserId
    )
    from TLMORM00015 as cashdeno
    where
    cashdeno.TlfEntryNo= :GroupNo
    and cashdeno.Active=true
    and cashdeno.SourceBranchCode= :SourceBranchCode
    <!--and cashdeno.AccountType is null-->
    <!--and cashdeno.AccountType =''-->
    and isnull(AcType,'') = ''
  </query>   
  
  <query name="CXDAO00006.UpdateCashDenoReverseStatusOfGroupByENO">
    update TLMORM00015 cashdeno set
    cashdeno.Reverse =true,
    cashdeno.UpdatedUserId= :UpdatedUserId,
    cashdeno.UpdatedDate= :updatedDate
    where cashdeno.TlfEntryNo =:ENO
    and cashdeno.SourceBranchCode= :SourceBranchCode
    and cashdeno.Reverse=false
    and cashdeno.Active=true
    and (cashdeno.DenoEntryNo = null or cashdeno.DenoEntryNo = '')
  </query>
  
</hibernate-mapping>


