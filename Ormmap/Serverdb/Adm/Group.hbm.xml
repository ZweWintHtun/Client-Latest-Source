<?xml version="1.0" encoding="utf-8"?>
<hibernate-mapping assembly="Ace.Windows.Admin.DataModel" namespace="Ace.Windows.Admin.DataModel" xmlns="urn:nhibernate-mapping-2.2">
	
	<import class="Ace.Windows.Admin.DataModel.GroupDTO, Ace.Windows.Admin.DataModel" rename="groupdto"/>
	
	<class name="Group" table="[Group]" >
		
		<id name="Id" type="Int32" unsaved-value="0">
			<generator class="increment">
			</generator>
		</id>
		
		<version name="TS" generated="always" unsaved-value="null" type="BinaryBlob">
			<column name="TS" sql-type="timestamp" not-null="false"/>
		</version>
		
		<property name="GroupName">
			<column name="GroupName" sql-type="nvarchar" not-null="true" />
		</property>
		
		<bag name="MenuInGroups" inverse="true" lazy="true" cascade="all">
			<key column="GroupId" />
			<one-to-many class="MenuInGroup" />
		</bag>
    <bag name="ProgramInGroups" inverse="true" lazy="true" cascade="all">
      <key column="GroupId" />
      <one-to-many class="ProgramInGroup" />
    </bag>
		<bag name="Roles" inverse="true" lazy="false" cascade="none">
			<key column="GroupId" />
			<one-to-many class="Role" />
		</bag>
	 
		<property name="Active" not-null="true" />
		<property name="CreatedDate" not-null="true" update="false" />
		<property name="CreatedUserId" not-null="true" update="false"/>
		<property name="UpdatedDate" not-null="false" insert="false" />
		<property name="UpdatedUserId" not-null="false" insert="false"/>
    
	</class>

	<!--//GroupDAO.CheckExist//-->
	<query name="GroupDAO.CheckExist">
		select new groupdto(g.Id, g.GroupName) from Group as g where g.GroupName = :groupName and g.Active = true
	</query>

	<!--//GroupDAO.SelectAll//-->
	<query name="GroupDAO.SelectAll">
		select new groupdto(
		g.Id,
		g.GroupName,
		g.Active,
		g.CreatedUserId,
		g.CreatedDate,
		g.TS,
		g.UpdatedUserId,
		g.UpdatedDate)
		from Group as g
		where g.Active = true
	</query>

	<!--//GroupDAO.SelectById//-->
	<query name="GroupDAO.SelectById">
		select new groupdto(
		g.Id,
		g.GroupName,
		g.Active,
		g.CreatedUserId,
		g.CreatedDate,
		g.TS,
		g.UpdatedUserId,
		g.UpdatedDate)
		from Group as g
		where g.Id = :id
		and g.Active = true
	</query>
	
</hibernate-mapping>