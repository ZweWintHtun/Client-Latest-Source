<?xml version="1.0" encoding="utf-8"?>
<!--WorkStation-->
<!-- 
// <copyright file="TLMORM00010.hbm.xml" company="ACE Data Systems">
// Copyright (c) ACE Data Systems. All rights reserved.
// </copyright>
// <CreatedUser>Nyo Me San</CreatedUser>
// <CreatedDate>2013-05-21</CreatedDate>
// <UpdatedUser></UpdatedUser>
// <UpdatedDate></UpdatedDate>
// <Version>1.0</Version>

-->
<hibernate-mapping assembly="Ace.Windows.Admin.DataModel" namespace="Ace.Windows.Admin.DataModel" xmlns="urn:nhibernate-mapping-2.2">
	<import class="Ace.Windows.Admin.DataModel.WorkStationDTO, Ace.Windows.Admin.DataModel" rename="terminaldto"/>
	<class name="WorkStation" table="WorkStation">

		<id name="Id" type="Int32" unsaved-value="0">
			<generator class="increment">
			</generator>
		</id>

		<version name="TS" generated="always" unsaved-value="null" type="BinaryBlob">
			<column name="TS" sql-type="timestamp" not-null="true"/>
		</version>

		<property name="WorkStationTypeId">
			<column name="WorkStationTypeId" sql-type="int" not-null="true" />
		</property>
		<property name="ParentId">
			<column name="ParentId" sql-type="int" not-null="false" />
		</property>

		<property name="Code">
			<column name="Code" sql-type="varchar" not-null="true" />
		</property>

		<property name="Description">
			<column name="Description" sql-type="varchar" not-null="true" />
		</property>

		<property name="HostName">
			<column name="HostName" sql-type="nvarchar" not-null="true" />
		</property>
		<property name="Name">
			<column name="Name" sql-type="nvarchar" not-null="true" />
		</property>
		<property name="IPAddress">
			<column name="IPAddress" sql-type="varchar" not-null="true" />
		</property>

		<property name="MacAddress">
			<column name="MacAddress" sql-type="varchar" not-null="true" />
		</property>

		<property name="LogOnUserId">
			<column name="LogOnUserId" sql-type="varchar" not-null="false" />
		</property>

		<property name="LogOnGroupId">
			<column name="LogOnGroupId" sql-type="varchar" not-null="false" />
		</property>

		<property name="PrinterName">
			<column name="PrinterName" sql-type="varchar" not-null="false" />
		</property>

		<property name="MaskAddress">
			<column name="MaskAddress" sql-type="varchar" not-null="true" />
		</property>

		<property name="UniqueId">
			<column name="UId" sql-type="char" not-null="false" />
		</property>

		<property name="SourceBranchCode">
			<column name="SourceBr" sql-type="varchar" not-null="true" />
		</property>
		<!--Support Fields-->

		<property name="Active" not-null="true"/>
		<property name="CreatedDate" not-null="true" update="false" />
		<property name="CreatedUserId" not-null="true" update="false"/>
		<property name="UpdatedDate" not-null="false" insert="false" />
		<property name="UpdatedUserId" not-null="false" insert="false"/>

		<many-to-one name="Branch" column="[SourceBr]" class="Branch" insert="false" update="false" ></many-to-one>

		<many-to-one name="WorkStationType" column="[WorkStationTypeId]" class="WorkStationType" insert="false" update="false" ></many-to-one>

		<bag name="CounterList" inverse="true" lazy="false" cascade="none">
			<key column="WorkStationId" />
			<one-to-many class="CounterInfo" />
		</bag>
	</class>

	<!-- Region Other -->
  <query name="HierarchyWorkStationDAO.SelectWorkStationIdByIPHostNameMACAddress">
    select w.Id
    from WorkStation as w
    where w.IPAddress = :ipAddress and w.HostName =:hostName and w.MacAddress=:macAddress
    and w.Active = true
  </query>
	<!--//WorkStation.CheckExist//-->
	<query name="WorkStationDAO.CheckExist">
		select new terminaldto(
		t.Id,
		t.HostName,
		t.IPAddress,
		t.LogOnUserId,
		t.LogOnGroupId,
		t.PrinterName,
		t.HostName,
		t.MaskAddress,
		t.UniqueId,
		t.SourceBranchCode )
		from WorkStation as t
		where ( t.HostName =: name and t.IPAddress =: iPAddress and t.HostName =: hostName and t.MaskAddress =: maskAddress)
		and  t.Active = true
	</query>

	<!--//WorkStationDAO.SelectAll//-->
	<query name="WorkStationDAO.SelectAll">
		select new terminaldto(
		t.Id,
		t.HostName,
		t.IPAddress,
		t.LogOnUserId,
		t.LogOnGroupId,
		t.PrinterName,
		t.HostName,
		t.MaskAddress,
		t.UniqueId,
		t.SourceBranchCode,
		t.Active,
		t.TS,
		t.CreatedUserId,
		t.CreatedDate,
		t.UpdatedUserId,
		t.UpdatedDate
		)
		from WorkStation as t
		where t.Active = true
	</query>

	<!--//WorkStationDAO.SelectById//-->
	<query name="WorkStationDAO.SelectById">
		select new terminaldto(
		t.Id,
		t.HostName,
		t.IPAddress,
		t.LogOnUserId,
		t.LogOnGroupId,
		t.PrinterName,
		t.HostName,
		t.MaskAddress,
		t.UniqueId,
		t.SourceBranchCode,
		t.Active,
		t.TS,
		t.CreatedUserId,
		t.CreatedDate,
		t.UpdatedUserId,
		t.UpdatedDate
		)
		from WorkStation as t
		where t.Id = :id
		and t.Active = true
	</query>

	<!--SelectWorkStationInformation-->
	<!-- comment by ytda-->
  <query name="WorkStationDAO.SelectWorkStationInformation">
    select new terminaldto(
    t.Id,
    t.Code,
    t.HostName,
    t.SourceBranchCode,
    s.BranchDescription
    )
    from WorkStation as t
    inner join t.Branch as s with s.Active = true
    where t.SourceBranchCode = :branchCode
    and t.Active = true
  </query>
	<!-- EndRegion Other -->

	<!-- Region Installer -->

	<!-- Region HierarchyWorkStation -->
	<query name="HierarchyWorkStationDAO.SelectCenterWorkStation">
    select new terminaldto(
    t.Id,
    t.SourceBranchCode,
    t.WorkStationTypeId,
    tt.WorkStationLevel
    )
    from WorkStation as t
    inner join t.WorkStationType as tt with tt.Active = true
    where t.IPAddress = :ipaddress and t.HostName =:hostname 
    <!--and t.MacAddress=:macaddress-->
    and t.Active = true
  </query>
	<!--//HierarchyWorkStationDAO.SelectForTreeView//-->
	<query name="HierarchyWorkStationDAO.SelectForTreeView">

		select new terminaldto(
		t.Id,
		t.ParentId,
		t.WorkStationTypeId,
		t.Code,
		t.Description,
		t.HostName,
		t.IPAddress,
		t.MacAddress,
		t.MaskAddress,
		t.TS
		)
		from WorkStation as t
		where t.Active = true
		order by t.ParentId asc
	</query>
	<!--//HierarchyWorkStationDAO.SelectForTreeView//-->
	<query name="HierarchyWorkStationDAO.SelectTreeViewByWorkStationLevel">

		select new terminaldto(
		t.Id,
		t.ParentId,
		tt.WorkStationLevel,
		t.WorkStationTypeId,
		t.Code,
		t.Description,
		t.HostName,
		t.IPAddress,
		t.MacAddress,
		t.MaskAddress,
		t.TS
		)
		from WorkStation as t
		inner join t.WorkStationType as tt with tt.Active=true
		where  t.Id=:id or t.ParentId=:id and t.Active = true
		order by t.Id asc
	</query>
	<!--//HierarchyWorkStationDAO.SelectWorkStationByWorkStationId//-->
	<query name="HierarchyWorkStationDAO.SelectWorkStationByWorkStationId">

		select new terminaldto(
		tt.WorkStationLevel,
		tt.Id,
		tt.Description,
		tt.HasNoChild,
		tt.IsUniqueType,
		t.Id,
		t.ParentId,
		t.Code,
		t.Description,
		t.HostName,
		t.IPAddress,
		t.MacAddress,
		t.MaskAddress,
		t.PrinterName,
		b.BranchCode,
		b.BranchDescription
		)
		from WorkStation as t
		inner join t.WorkStationType as tt with tt.Active=true
		inner join t.Branch as b with b.Active=true
		where t.Id = :id
		and t.Active = true
	</query>
	<query name="HierarchyWorkStationDAO.CheckExist">
	  select new terminaldto(
	  ws.Id
	  )
	  from WorkStation as ws
	  where ws.IPAddress =: ipaddress and ws.SourceBranchCode =: sourcebranchcode
		and Active = true
	</query>
  <query name="HierarchyWorkStationDAO.IsExist">
	  select new terminaldto(
	  ws.Id
	  )
	  from WorkStation as ws
	  where ws.IPAddress =: ipaddress
	  and Active = true
	</query>
	<query name="HierarchyWorkStationDAO.HasChild">
		select count(
		Id
		)
		from WorkStation
		where ParentId =: parentid
		and Active = true
	</query>
	<!--//HierarchyWorkStationDAO.CanUpdate//-->
	<query name="HierarchyWorkStationDAO.CanUpdate">
		select new terminaldto(ws.Id)
		from WorkStation as ws
		where ws.Id = :id
		and ws.Active = true
	</query>
	<query name="HierarchyWorkStationDAO.Update">
		update WorkStation as ws set
		ws.WorkStationTypeId = :workstationtypeid,
		ws.ParentId=:parentid,
		ws.Code=:code,
		ws.Description=:description,
		ws.HostName=:hostname,
		ws.Name=:name,
		ws.IPAddress=:ipaddress,
		ws.MacAddress=:macaddress,
		ws.MaskAddress=:maskaddress,
		ws.PrinterName=:printername,
		ws.SourceBranchCode=:sourcebr,
		ws.UpdatedDate = :updatedDate,
		ws.UpdatedUserId = :updatedUserId
		where ws.Id =:id
	</query>
	<query name="HierarchyWorkStationDAO.DeleteById">
		delete from WorkStation where Id = :id
	</query>
	<!-- Endregion HierarchyWorkStation -->

	<!-- Region CounterInformation -->
	<!--//HierarchyWorkStationDAO.SelectForCounterInformationByCCC//-->

	<query name="HierarchyWorkStationDAO.SelectForCounterInformationByCCC">

		select new terminaldto(
		t.Id,
		t.WorkStationTypeId,
		tt.Description,
		t.Code,
		t.Description,
		t.HostName,
		t.IPAddress,
		t.MacAddress,
		b.BranchCode,
		b.BranchDescription,
		c.HasVault,
		t.TS,
		case
		when count(c.WorkStationId) > 0 then true
		else false end
		)
		from WorkStation as t
	  left join t.CounterList as c with c.CounterType=:countertype and c.Active=true
		inner join t.WorkStationType as tt with tt.Active=true
		inner join t.Branch as b with b.Active=true
		where  t.SourceBranchCode=:sourcebranchcode and
		t.Active = true
		group by t.Id,t.WorkStationTypeId,tt.Description,t.Code,t.Description,t.HostName,t.IPAddress,t.MacAddress,b.BranchCode,b.BranchDescription,c.HasVault,t.TS
	  order by b.BranchCode asc
	</query>

	<!--//HierarchyWorkStationDAO.SelectForCounterInformationByCenter//-->
	<query name="HierarchyWorkStationDAO.SelectForCounterInformationByCenter">

		select new terminaldto(
		t.Id,
		t.WorkStationTypeId,
		tt.Description,
		t.Code,
		t.Description,
		t.HostName,
		t.IPAddress,
		t.MacAddress,
		b.BranchCode,
		b.BranchDescription,
		c.HasVault,
		t.TS,
		case
		when count(c.WorkStationId) > 0 then true
		else false end
		)
		from WorkStation as t
	  left join t.CounterList as c with c.CounterType=:countertype and c.Active=true
		inner join t.WorkStationType as tt with tt.Active=true
		inner join t.Branch as b with b.Active=true
		where t.Active = true
		group by t.Id,t.WorkStationTypeId,tt.Description,t.Code,t.Description,t.HostName,t.IPAddress,t.MacAddress,b.BranchCode,b.BranchDescription,c.HasVault,t.TS
	  order by b.BranchCode asc
	</query>

	<!--Endregion-->

	<!--Endregion-->

	<query name="HierarchyWorkStationDAO.SelectWorkStationCodeandHostNameBySourceBranchCode">

		select new terminaldto(
		w.Id,
		w.Code,
		w.HostName
		)
		from WorkStation as w
		where  w.SourceBranchCode = :sourceBranchCode and
		w.Active = true
	</query>

	<query name="HierarchyWorkStationDAO.SelectWorkStationCodeandHostNameBySourceBranchCodeAndWorkStationId">

		select new terminaldto(
		w.Id,
		w.Code,
		w.HostName
		)
		from WorkStation as w
		where  w.SourceBranchCode = :sourceBranchCode and
		w.WorkStationTypeId = :workstationTypeId or
		w.ParentId= (select new terminaldto(
		ws.Id) from WorkStation as ws
		where  ws.SourceBranchCode = :sourceBranchCode and
		ws.WorkStationTypeId = :workstationTypeId and
		ws.Active=true)
		and
		w.Active = true
	</query>
	<query name="WorkStationDAO.SelectWorkStationforCCCLevel">
		select new terminaldto(
		t.Id,
		t.Code,
		t.HostName,
		t.SourceBranchCode,
		s.BranchDescription
		)
		from WorkStation as t
		inner join t.Branch as s with s.Active = true
		inner join t.WorkStationType as wt with wt.Active = true
		where t.SourceBranchCode = :branchCode
		and wt.WorkStationLevel = :ccclevel or ( t.SourceBranchCode = :branchCode and wt.WorkStationLevel= :centerlevel and wt.HasNoChild=true)
		and t.Active = true
	</query>
	<query name="WorkStationDAO.SelectWorkStationforCenterLevel">
		select new terminaldto(
		t.Id,
		t.Code,
		t.HostName,
		t.SourceBranchCode,
		s.BranchDescription
		)
		from WorkStation as t
		inner join t.Branch as s with s.Active = true
		inner join t.WorkStationType as wt with wt.Active = true
		where wt.WorkStationLevel = :ccclevel or (wt.WorkStationLevel= :centerlevel and wt.HasNoChild=true)
		and t.Active = true
	</query>

  <query name="UserDAO.SelectBranchCodeByIPAddress">
    select new terminaldto(
    t.Id,
    t.HostName,
    t.IPAddress,
    t.LogOnUserId,
    t.LogOnGroupId,
    t.PrinterName,
    t.HostName,
    t.MaskAddress,
    t.UniqueId,
    t.SourceBranchCode,
    t.Active,
    t.TS,
    t.CreatedUserId,
    t.CreatedDate,
    t.UpdatedUserId,
    t.UpdatedDate
    )
    from WorkStation as t
    where  t.IPAddress = :ipaddress
    and t.Active = true
  </query>
</hibernate-mapping>