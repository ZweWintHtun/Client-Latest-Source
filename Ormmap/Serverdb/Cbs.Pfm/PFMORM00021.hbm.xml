<?xml version="1.0" encoding="utf-8"?>
<hibernate-mapping assembly="Ace.Cbs.Pfm.Dmd" namespace="Ace.Cbs.Pfm.Dmd" xmlns="urn:nhibernate-mapping-2.2">

  <import class="Ace.Cbs.Pfm.Dmd.PFMDTO00021, Ace.Cbs.Pfm.Dmd" rename="faofdto"/>

  <class name="PFMORM00021" table="[FAOF]" >

    <id name="Id" type="Int32" unsaved-value="0">
      <generator class="increment">
      </generator>
    </id>
 
    <version name="TS" generated="always" unsaved-value="null" type="BinaryBlob">
      <column name="TS" sql-type="timestamp" not-null="false"/>
    </version>

    <property name="FledgerAccountNo">
      <column name="AcctNo" sql-type="varchar" not-null="true" />
    </property>
    <many-to-one name="Fledger" column="[AcctNo]" class="PFMORM00023" insert="false" update="false"></many-to-one>


    <property name="LastReceiptNo">
      <column name="LastRNo" sql-type="varchar" not-null="false" />
    </property>
    
    <property name="Name">
      <column name="Name" sql-type="nvarchar" not-null="false" />
    </property>
    <property name="GuardianName">
      <column name="GName" sql-type="nvarchar" not-null="false" />
    </property>
    <property name="GuardianNRC">
      <column name="GuarNRC" sql-type="nvarchar" not-null="false" />
    </property>
    <property name="NRC">
      <column name="NRC" sql-type="nvarchar" not-null="false" />
    </property>
    <property name="AccountSignature">
      <column name="ACSign" sql-type="varchar" not-null="false" />
    </property>
    <property name="DateOfBirth">
      <column name="DOB" sql-type="datetime" not-null="false" />
    </property>
    <property name="JoinType">
      <column name="JoinType" sql-type="varchar" not-null="false" />
    </property>
    <property name="Address">
      <column name="Address" sql-type="nvarchar" not-null="false" />
    </property>
    <property name="Phone">
      <column name="Phone" sql-type="nvarchar" not-null="false" />
    </property>
    <property name="Fax">
      <column name="Fax" sql-type="nvarchar" not-null="false" />
    </property>
    <property name="Email">
      <column name="Email" sql-type="nvarchar" not-null="false" />
    </property>
    <property name="Business">
      <column name="Business" sql-type="varchar" not-null="false" />
    </property>
    <property name="AcceptDate">
      <column name="ADate" sql-type="datetime" not-null="false" />
    </property>
    <property name="CloseDate">
      <column name="CloseDate" sql-type="datetime" not-null="false" />
    </property>
    <property name="NoOfPersonSign">
      <column name="NoPSign" sql-type="int" not-null="false" />
    </property>
    <property name="SerialOfCustomer">
      <column name="SrOfCust" sql-type="int" not-null="false" />
    </property>

    <many-to-one name="Branch" column="[Source]" class="Ace.Windows.Admin.DataModel.Branch" insert="false" update="false"></many-to-one>
    <property name="SourceBranchCode">
      <column name="SourceBr" sql-type="varchar" not-null="true" />
    </property>
	  
    <many-to-one name="Currency" column="[Cur]" class="Ace.Windows.Admin.DataModel.Currency" insert="false" update="false"></many-to-one>
    <property name="CurrencyCode">
      <column name="Cur" sql-type="varchar" not-null="false" />
    </property>


    <many-to-one name="Customer" column="[CustId]" class="PFMORM00001" insert="false" update="false"></many-to-one>
    <property name="CustomerId">
      <column name="CustId" sql-type="varchar" not-null="false" />
    </property>

    <many-to-one name="CityCode" column="[CityCode]" class="Ace.Windows.Admin.DataModel.City" insert="false" update="false"></many-to-one>
    <property name="City_Code">
      <column name="CityCode" sql-type="varchar" not-null="false" />
    </property>

    <many-to-one name="TownshipCode" column="[TownshipCode]" class="Ace.Windows.Admin.DataModel.Township" insert="false" update="false"></many-to-one>
    <property name="Township_Code">
      <column name="TownshipCode" sql-type="varchar" not-null="false" />
    </property>

    <many-to-one name="StateCode" column="[StateCode]" class="Ace.Windows.Admin.DataModel.State" insert="false" update="false"></many-to-one>
    <property name="State_Code">
      <column name="StateCode" sql-type="varchar" not-null="false" />
    </property>
    <property name="OpenDate">
      <column name="OPENDATE" sql-type="varchar" not-null="false" />
    </property>
    <property name="EStatus">
      <column name="ESTATUS" sql-type="varchar" not-null="false" />
    </property>
    <property name="UserNo">
      <column name="USERNO" sql-type="varchar" not-null="false" />
    </property>
    <property name="Active" not-null="true"/>
    <property name="CreatedDate" not-null="true" update="false" />
    <property name="CreatedUserId" not-null="true" update="false"/>
    <property name="UpdatedDate" not-null="false" insert="false" />
    <property name="UpdatedUserId" not-null="false" insert="false"/>

  </class>

  <query name="CXDAO00006.FAOFSelectByAccountNumber">
	  select new faofdto(
	  faof.Id,
	  faof.FledgerAccountNo,
	  faof.LastReceiptNo,
	  faof.Name,
	  faof.GuardianName,
	  faof.GuardianNRC,
	  faof.NRC,
	  faof.AccountSignature,
	  faof.DateOfBirth,
	  faof.JoinType,
	  faof.Address,
	  faof.Phone,
	  faof.Fax,
	  faof.Email,
	  faof.Business,
	  faof.AcceptDate,
	  faof.CloseDate,
	  faof.NoOfPersonSign,
	  faof.SerialOfCustomer,
	  faof.SourceBranchCode,
	  faof.CurrencyCode,
	  faof.CustomerId,
	  faof.City_Code,
	  faof.Township_Code,
	  faof.State_Code,
	  faof.OpenDate,
	  faof.TS,
	  faof.Active,
	  faof.CreatedDate,
	  faof.CreatedUserId,
	  faof.UpdatedDate,
	  faof.UpdatedUserId
	  )
	  from PFMORM00021 as faof
	  where faof.FledgerAccountNo = :accountNumber and (faof.CloseDate =null or faof.CloseDate ='') and faof.Active = true
	  order by faof.CustomerId
  </query>

  <query name="CXDAO00006.FAOFSelectByAccountNumberAndSerialofCustomer">
    select new faofdto(
    faof.Id,
    faof.FledgerAccountNo,
    faof.LastReceiptNo,
    faof.Name,
    faof.GuardianName,
    faof.GuardianNRC,
    faof.NRC,
    faof.AccountSignature,
    faof.DateOfBirth,
    faof.JoinType,
    faof.Address,
    faof.Phone,
    faof.Fax,
    faof.Email,
    faof.Business,
    faof.AcceptDate,
    faof.CloseDate,
    faof.NoOfPersonSign,
    faof.SerialOfCustomer,
    faof.SourceBranchCode,
    faof.CurrencyCode,
    faof.CustomerId,
    faof.City_Code,
    faof.Township_Code,
    faof.State_Code,
    faof.TS,
    faof.Active,
    faof.CreatedDate,
    faof.CreatedUserId,
    faof.UpdatedDate,
    faof.UpdatedUserId
    )
    from PFMORM00021 as faof
    where faof.FledgerAccountNo = :accountNumber
    and faof.SerialOfCustomer = :serialOfCustomer
    and faof.Active = true
  </query>

  <query name="PFMORM00021.DeleteOldData">
    delete from PFMORM00021 where FledgerAccountNo = :accountNo and Active = true
  </query>

	<!--"PFMDAO00021.UpdateCustIDByAccountNo"-->
	<query name="PFMDAO00021.UpdateCustIDByAccountNo">
		update PFMORM00021 c
		set
		c.UpdatedUserId = :updatedUserId,
		c.UpdatedDate = :updatedDate,
		c.CustomerId = :custId

		where c.FledgerAccountNo = :accountNo
		and c.Active = true
	</query>
	
	<!--TCMSVE00052.SelectFLedgerData-->
	<query name="TCMSVE00052.SelectFAOFData">
		select distinct f.CustomerId, fr.AccountNo , fr.ReceiptNo , f.CloseDate
		from PFMORM00021 as f , PFMORM00032 as fr
		where f.FledgerAccountNo = fr.AccountNo and f.CustomerId = :custid
		and f.Active = true and fr.Active = true
	</query>
	
	<!--"PFMDAO00021.UpdateByUpdatedUser"-->     <!--ASDA-->
	<query name="PFMDAO00021.UpdateByUpdatedUser">
		update PFMORM00021 f
		set
		f.UpdatedUserId = :updatedUserId,
		f.UpdatedDate = :updateDate
		where f.FledgerAccountNo = :accountNo and f.SourceBranchCode = :sourceBr
		and f.Active = true
	</query>

  <query name="PFMDAO00021.FAOFSelectByAccountNumberForRePrintingPassBook">
    select new faofdto(
    f.FledgerAccountNo,
    f.NoOfPersonSign,
    f.AccountSignature,
    f.CurrencyCode,
    f.Business,
    c.CustomerId,
    c.Name,
    c.FatherName,
    c.NRC,
    c.Address
    )
    from PFMORM00021 as f
    inner join f.Customer as c
    where f.FledgerAccountNo =:acctno
    and f.Active = true
    and c.Active = true
  </query>
  
</hibernate-mapping>