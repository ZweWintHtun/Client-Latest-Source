<?xml version="1.0" encoding="utf-8"?>

<hibernate-mapping assembly="Ace.Cbs.Tel.Dmd" namespace="Ace.Cbs.Tel.Dmd" xmlns="urn:nhibernate-mapping-2.2">
  
  <import class="Ace.Cbs.Tel.Dmd.TLMDTO00016, Ace.Cbs.Tel.Dmd" rename="podto"/>
  
  <class name="TLMORM00016" table="[PO]" >
    
	  <id name="PONo">
		  <column name="PONo" sql-type="varchar" not-null="true" />
	  </id>
    
    <version name="TS" generated="always" unsaved-value="null" type="BinaryBlob">
      <column name="TS" sql-type="timestamp" not-null="true"/>
    </version>  
    
    <property name="Amount">
      <column name="Amount" sql-type="numeric" not-null="true" />
    </property>
    <property name="AccountNo">
      <column name="AcctNo" sql-type="varchar" not-null="false" />
    </property>
    <property name="ADate">
      <column name="Adate" sql-type="datetime" not-null="false" />
    </property>
    <property name="IDate">
      <column name="Idate" sql-type="datetime" not-null="false" />
    </property>
    <property name="Status">
      <column name="Status" sql-type="varchar" not-null="false" />
    </property>
    <property name="ToAccountNo">
      <column name="ToAcctNo" sql-type="varchar" not-null="false" />
    </property>
    <property name="CheckNo">
      <column name="CheckNo" sql-type="varchar" not-null="false" />
    </property>
    <property name="Income">
      <column name="Income" sql-type="varchar" not-null="false" />
    </property>
    <property name="UserNo">
      <column name="UserNo" sql-type="varchar" not-null="false" />
    </property>
    <property name="AcSign">
      <column name="AcSign" sql-type="varchar" not-null="false" />
    </property>
    <property name="Charges">
      <column name="Charges" sql-type="numeric" not-null="false" />
    </property>
    <property name="ACode">
      <column name="Acode" sql-type="varchar" not-null="false" />
    </property>
    <property name="Budget">
      <column name="Budget" sql-type="varchar" not-null="false" />
    </property>
    <property name="UniqueId">
      <column name="UId" sql-type="char" not-null="false" />
    </property>
    <property name="SourceBranchCode">
      <column name="SourceBr" sql-type="varchar" not-null="true" />
    </property>
    <property name="Currency">
      <column name="Cur" sql-type="varchar" not-null="true" />
    </property>
    <property name="Rate">
      <column name="Rate" sql-type="numeric" not-null="false" />
    </property>
    <property name="SettlementDate">
      <column name="SettlementDate" sql-type="datetime" not-null="false" />
    </property>

    <property name="RefundDate">
      <column name="RefundsDate" sql-type="datetime" not-null="false" />
    </property>


    <property name="Active" not-null="true"/>
    <property name="CreatedDate" not-null="true" update="true" />
    <property name="CreatedUserId" not-null="true" update="true"/>
    <property name="UpdatedDate" not-null="false" insert="false" />
    <property name="UpdatedUserId" not-null="false" insert="false"/>

  </class>

  <query name="TLMDAO00016.UpdatePOByPONo">
    update TLMORM00016 po
    set
    po.IDate = :issuedate,
    po.Status = :status,
    po.Budget = :budget,
    po.UserNo = :userno,
    po.UpdatedUserId = :updatedUserId,
    po.UpdatedDate = :updatedDate
    where po.PONo = :poNo and po.Active = true
  </query>

  <query name="TLMDAO00016.UpdatePORefundByPONoAndBudgetYear">
    update TLMORM00016 po
    set
    po.IDate = :issuedate,
    po.Status = :status,
    po.RefundDate = :refundDate,
    po.UpdatedUserId = :updatedUserId,
    po.UpdatedDate = :updatedDate,
    po.ToAccountNo = :toacctno
    where po.PONo = :poNo and po.Budget = :budget and po.Active = true
  </query>

  <query name="CXDAO00006.SelectByPONo">
		select new podto(
		po.PONo,
		po.Amount,
		po.AccountNo,
		po.ADate,
		po.IDate,
		po.Status,
		po.ToAccountNo,
		po.CheckNo,
		po.Income,
		po.UserNo,
		po.AcSign,
		po.Charges,
		po.ACode,
		po.Budget,
		<!--po.UniqueId,-->
    po.SourceBranchCode,
    po.Currency,
    po.Rate,
    po.SettlementDate,
    po.RefundDate
    )
    from TLMORM00016 as po where po.PONo=:poNo and po.SourceBranchCode=:sourcebr and po.Active = true
  </query>
  
  <query name="TLMDAO00016.SelectPOOutstandingReport">
    select new podto (po.ACode, po.PONo,po.ADate,po.IDate,po.Amount,po.Status,po.Currency)
    from TLMORM00016 as po
    where (po.IDate = null or po.IDate = '') and po.ACode in (:acodelist) and po.PONo not in (:toaccountnolist) and po.Active = true
  </query>

	<query name="PODAO.CheckExist">
		select new podto(
		a.PONo
		)
		from TLMORM00016 as a
		where a.PONo =: pono
		and  a.Active = true
	</query>

	<query name="TLMDAO00016.SelectPO">
    select new podto(
    po.PONo,
    po.Amount,
    po.AccountNo,
    po.ADate,
    po.IDate,
    po.Status,
    po.ToAccountNo,
    po.CheckNo,
    po.Income,
    po.UserNo,
    po.AcSign,
    po.Charges,
    po.ACode,
    po.Budget,
    po.UniqueId,
    po.SourceBranchCode,
    po.Currency,
    po.Rate,
    po.SettlementDate,
    po.RefundDate
    )
    from TLMORM00016 as po
    where po.Active = true and (po.IDate!=Null and po.IDate!='')
    and po.SourceBranchCode=:SourceBranchCode

  </query>

	<query name="TLMDAO00016.SelectByPoNOforRE">
    select new podto
    (
    po.PONo
    )
    from TLMORM00016 as po
    where po.Active = true and (po.IDate = null or po.IDate = '')
    and po.SourceBranchCode=:SourceBranchCode

  </query>

	<query name="TLMDAO00016.DeletePO">
    delete from TLMORM00016 as po where (po.IDate!=Null and po.IDate!='')
    and po.SourceBranchCode=:SourceBranchCode and po.Active =true
  </query>

  <query name="TLMDAO00016.DeletePOByActive">
    update TLMORM00016 po
    set
    po.Active = false,
    po.UpdatedUserId = :updatedUserId,
    po.UpdatedDate = :updatedDate
    where po.PONo = :pono and po.SourceBranchCode = :sourceBr and po.Active = true
  </query>

  <query name="TLMDAO00016.SelectSumPOAmount">
    select new podto
    (
    po.Currency,
    sum(po.Amount)
    )
    from TLMORM00016 as po
    where po.Active = true and (po.IDate = null or po.IDate = '')
    and po.SourceBranchCode=:SourceBranchCode
    group by po.Currency
  </query>

  <query name="TLMDAO00016.UpdateIDateAndStatus">
    update TLMORM00016 po
    set
    po.IDate = null,
    po.Status = null,
    po.UpdatedDate =: updatedDate,
    po.UpdatedUserId =: updatedUserId
    where po.PONo =: poNo and po.Active = true
  </query>
  <query name="TLMDAO00016.SelectByPONoAndBudgetYear">
	  select new podto
	  (
	  po.Currency,
	  po.Amount,
	  po.ACode,
	  po.IDate
	  )
	  from TLMORM00016 as po
	  where po.Active = true and
	  po.PONo = :pono and
	  po.Budget = :budget and
	  po.SourceBranchCode=:SourceBranchCode
  </query>
  

  <query name="TLMDAO00016.SelectByPONoAndSourceBrAndCurAndBudgetYear">
    select new podto
    (
    po.Currency,
    po.Amount,
    po.ACode,
    po.IDate
    )
    from TLMORM00016 as po
    where po.Active = true and
    po.PONo = :pono and
    po.SourceBranchCode = :sourceBr and
    po.Currency = :cur and
    po.Budget = :budget
  </query>

  <!-- select PO info by acctno,branchno and active  -->
  <query name="TLMDAO00016.SelectPOinfoByacctno">
    select new podto
    (
    po.PONo,
    po.Currency,
    po.Amount,
    po.IDate,
    po.Budget
    )
    from TLMORM00016 as po
    where po.AccountNo = :acctno
    and po.SourceBranchCode = :sourceBr
    and po.Active = true
  </query>

    <!-- PO Edit Cash-->
	<query name="TLMDAO00016.SelectPONo">
		select new podto(
		po.PONo,
		po.Amount,
		po.AccountNo,
		po.ADate,
		po.IDate,
		po.Status,
		po.ToAccountNo,
		po.CheckNo,
		po.Income,
		po.UserNo,
		po.AcSign,
		po.Charges,
		po.ACode,
		po.Budget,
		po.SourceBranchCode,
		po.Currency,
		po.Rate,
		po.SettlementDate,
		po.RefundDate
		)
		from TLMORM00016 as po where po.PONo=:poNo
		and po.Budget=:budget
		and po.SourceBranchCode=:sourceBranch
		and po.Active = true
	</query>

  <query name="TLMDAO00016.DeletePOData">
    update TLMORM00016 po
    set
    po.Active = false,
    po.UpdatedUserId = :updatedUserId,
    po.UpdatedDate = :updatedDate
    where po.PONo = :poNo and po.Budget=:budget and po.SourceBranchCode = :sourceBranch and po.Active = true
  </query>

	<query name="TLMDAO00016.UpdatePOByAmount">
		update TLMORM00016 po
		set
		po.Amount = :amount,
		po.Charges = :charges,
		po.UpdatedUserId = :updatedUserId,
		po.UpdatedDate = :updatedDate
		where po.PONo = :poNo
		and po.Budget=:budget
		and po.SourceBranchCode = :sourceBranch
		and po.Active = true
	</query>

	<query name="TLMDAO00016.UpdateIDateAndRefundSDate">
		update TLMORM00016 po
		set
		po.IDate = null,
		po.ToAccountNo = null,
		po.RefundDate = null,
		po.UpdatedDate =: updatedDate,
		po.UpdatedUserId =: updatedUserId
		where po.PONo =: poNo
		and po.Budget = :budget
		and po.SourceBranchCode = :sourceBranch
    and po.Active = true
	</query>
</hibernate-mapping>