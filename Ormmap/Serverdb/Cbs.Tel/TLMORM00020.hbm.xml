<?xml version="1.0" encoding="utf-8"?>
<!--DepositCode-->
<!-- 
// <copyright file="TLMORM00020.hbm.xml" company="ACE Data Systems">
// Copyright (c) ACE Data Systems. All rights reserved.
// </copyright>
// <CreatedUser>Nyo Me San</CreatedUser>
// <CreatedDate>2013-05-21</CreatedDate>
// <UpdatedUser></UpdatedUser>
// <UpdatedDate></UpdatedDate>
// <Version>1.0</Version>

-->
<hibernate-mapping assembly="Ace.Cbs.Tel.Dmd" namespace="Ace.Cbs.Tel.Dmd" xmlns="urn:nhibernate-mapping-2.2">
	<import class="Ace.Cbs.Tel.Dmd.TLMDTO00020, Ace.Cbs.Tel.Dmd" rename="depositcodedto"/>
	<class name="TLMORM00020" table="DepositCode">
		<id name="DepositCode">
			<column name="DepCode" sql-type="varchar" not-null="true" />
		</id>
		<version name="TS" generated="always" unsaved-value="null" type="BinaryBlob">
			<column name="TS" sql-type="timestamp" not-null="true"/>
		</version>
		<property name="Description">
			<column name="Desp" sql-type="nvarchar" not-null="true" />
		</property>
		<property name="UniqueId">
			<column name="UId" sql-type="char" not-null="false" />
		</property>
		<property name="SourceBranchCode">
			<column name="SourceBr" sql-type="varchar" not-null="true" />
		</property>
		<!--Support Fields-->
		
		<property name="Active" not-null="true"/>
		<property name="CreatedDate" not-null="true" update="false" />
		<property name="CreatedUserId" not-null="true" update="false"/>
		<property name="UpdatedDate" not-null="false" insert="false" />
		<property name="UpdatedUserId" not-null="false" insert="false"/>

	</class>

	<!--//DEPOSITCODE.CheckExist//-->
	<!--<query name="DEPOSITCODEDAO.CheckExist">
		select new depositcodedto(
		d.DepositCode,
		d.Description,
		d.UniqueId,
		d.SourceBranchCode )
		from TLMORM00020 as d
		where ((d.DepositCode =: dEPCODE and d.SourceBranchCode=:sourceBr ) or d.Description=:dESP)
		and d.Active = true
	</query>-->
  <query name="DEPOSITCODEDAO.CheckExist">
    select new depositcodedto(
    d.DepositCode,
    d.Description,
    d.UniqueId,
    d.SourceBranchCode )
    from TLMORM00020 as d
    where d.DepositCode =: dEPCODE and d.SourceBranchCode=:sourceBr 
    and d.Active = true
  </query>

  <!--//DEPOSITCODE.CheckExist2//-->
  <query name="DEPOSITCODEDAO.CheckExist2">
    select new depositcodedto(
    d.DepositCode,
    d.Description,
    d.UniqueId,
    d.SourceBranchCode,
    d.Active,
    d.TS,
    d.CreatedUserId,
    d.CreatedDate,
    d.UpdatedUserId,
    d.UpdatedDate )
    from TLMORM00020 as d
    where d.DepositCode =: dEPCODE and d.SourceBranchCode=:sourceBr
  </query>

  <!--//DEPOSITCODE.SelectDepositCodeDesp//-->
  <query name="DepositCode.SelectDepositCodeDesp">
    select new depositcodedto(
    d.DepositCode,
    d.Description)
    from TLMORM00020 as d
    where 
    <!--((d.DepositCode =: dEPCODE and d.SourceBranchCode=:sourceBr ) or d.Description=:dESP)
    and--> 
    d.Active = true
  </query>

	<!--//DEPOSITCODEDAO.SelectAll//-->
	<query name="DEPOSITCODEDAO.SelectAll">
    select new depositcodedto(
    d.DepositCode,
    d.Description,
    d.UniqueId,
    d.SourceBranchCode,
    d.Active,
    d.TS,
    d.CreatedUserId,
    d.CreatedDate,
    d.UpdatedUserId,
    d.UpdatedDate
    )
    from TLMORM00020 as d
    where d.Active = true
    and d.SourceBranchCode = :sourceBr
    order by d.DepositCode
  </query>

	<!--//DEPOSITCODEDAO.SelectByDEPCODE//-->
	<query name="DEPOSITCODEDAO.SelectByDEPCODE">
		select new depositcodedto(
		d.DepositCode,
		d.Description,
		d.UniqueId,
		d.SourceBranchCode,
		d.Active,
		d.TS,
		d.CreatedUserId,
		d.CreatedDate,
		d.UpdatedUserId,
		d.UpdatedDate
		)
		from TLMORM00020 as d
		where d.DepositCode = :dEPCODE
		and d.Active = true
	</query>

  <!--//DEPOSITCODEDAO.SelectByDEPCODE//-->
  <query name="DEPOSITCODEDAO.SelectToTS">
    select new depositcodedto(
    d.DepositCode,
    d.Description,
    d.UniqueId,
    d.SourceBranchCode,
    d.Active,
    d.TS,
    d.CreatedUserId,
    d.CreatedDate,
    d.UpdatedUserId,
    d.UpdatedDate
    )
    from TLMORM00020 as d
    where d.DepositCode = :dEPCODE
    and d.SourceBranchCode = :sourceBr
    and d.Active = true
  </query>

  <!--//DEPOSITCODEDAO.SelectByDEPCODE//-->
  <query name="DEPOSITCODEDAO.SelectToDeleteTS">
    select new depositcodedto(
    d.DepositCode,
    d.Description,
    d.UniqueId,
    d.SourceBranchCode,
    d.Active,
    d.TS,
    d.CreatedUserId,
    d.CreatedDate,
    d.UpdatedUserId,
    d.UpdatedDate
    )
    from TLMORM00020 as d
    where d.DepositCode = :dEPCODE
    and d.SourceBranchCode = :sourceBr
    and d.Active = false
  </query>


  <query name="DEPOSITCODEDAO.Delete">
    update TLMORM00020 d set
    d.Active = false,
    d.UpdatedDate = :updateddate,
    d.UpdatedUserId = :updateduserid
    where d.DepositCode = :dEPCODE
    and d.SourceBranchCode = :sourceBr
    and d.Active = true
  </query>
	
</hibernate-mapping>
