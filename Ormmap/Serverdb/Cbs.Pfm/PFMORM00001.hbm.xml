<?xml version="1.0" encoding="utf-8"?>
<hibernate-mapping assembly="Ace.Cbs.Pfm.Dmd" namespace="Ace.Cbs.Pfm.Dmd" xmlns="urn:nhibernate-mapping-2.2">

  <import class="Ace.Cbs.Pfm.Dmd.PFMDTO00001, Ace.Cbs.Pfm.Dmd" rename="customerIddto"/>

  <!--CustomerId Table Fields-->
  <class name="PFMORM00001" table="[CustId]" >

    <id name="CustomerId" >
      <column name="CustId" sql-type="varchar" not-null="true" />
    </id>

    <version name="TS" generated="always" unsaved-value="null" type="BinaryBlob">
      <column name="TS" sql-type="timestamp" not-null="true"/>
    </version>

    <property name="Name">
      <column name="Name" sql-type="nvarchar" not-null="true" />
    </property>

    <property name="IsNRC">
      <column name="IsNRC" sql-type="bit" not-null="true" />
    </property>

    <property name="NRC">
      <column name="NRC" sql-type="nvarchar" not-null="false" />
    </property>

    <property name="GuardianName">
      <column name="GuardianName" sql-type="nvarchar" not-null="false" />
    </property>

    <property name="IsGuardianNRC">
      <column name="IsGuardianNRC" sql-type="bit" not-null="true" />
    </property>

    <property name="GuardianNRCNo">
      <column name="GuardianNRCNo" sql-type="nvarchar" not-null="false" />
    </property>

    <property name="FatherName">
      <column name="FatherName" sql-type="nvarchar" not-null="true" />
    </property>

    <property name="Address">
      <column name="Address" sql-type="nvarchar" not-null="true" />
    </property>

    <property name="CloseAC">
      <column name="CloseAC" sql-type="numeric(5,0)" not-null="true" />
    </property>

    <property name="OpenAC">
      <column name="OpenAC" sql-type="numeric(5,0)" not-null="true" />
    </property>

    <property name="CloseDate">
      <column name="CloseDate" sql-type="datetime" not-null="false" />
    </property>

    <property name="PhoneNo">
      <column name="Phone" sql-type="nvarchar" not-null="false" />
    </property>

    <property name="FaxNo">
      <column name="Fax" sql-type="nvarchar" not-null="false" />
    </property>

    <property name="Email">
      <column name="Email" sql-type="nvarchar" not-null="false" />
    </property>
    <property name="Photo">
      <column name="Photo" sql-type="image" not-null="false" />
    </property>

    <property name="Signature" >
      <column name="Signature" sql-type="image" length="2147483647" not-null="false" />
    </property>

    <property name="IsVIP">
      <column name="IsVIP" sql-type="bit" not-null="true" />
    </property>

    <property name="Gender">
      <column name="Gender" sql-type="nvarchar" not-null="true" />
    </property>

    <property name="Remark">
      <column name="Remark" sql-type="nvarchar" not-null="false" />
    </property>

    <property name="PassportNo">
      <column name="PassportNo" sql-type="varchar" not-null="false" />
    </property>

    <property name="DateOfBirth">
      <column name="DOB" sql-type="datetime" not-null="true" />
    </property>
    <property name="USERNO">
      <column name="USERNO" sql-type="varchar" not-null="false" />
    </property>
    <property name="NameOnly">
      <column name="NameOnly" sql-type="nvarchar" not-null="true" />
    </property>
    <property name="DATE_TIME">
      <column name="DATE_TIME" sql-type="datetime" not-null="true" />
    </property>
    <property name="SourceBranch">
      <column name="SourceBr" sql-type="varchar" not-null="true" />
    </property>

    <property name="NickName">
      <column name="NickName" sql-type="nvarchar" not-null="true" />
    </property>

    <property name="StateCode">
      <column name="StateCode" sql-type="varchar" not-null="true" />
    </property>

    <property name="CityCode">
      <column name="CityCode" sql-type="varchar" not-null="true" />
    </property>

    <property name="TownshipCode">
      <column name="TownshipCode" sql-type="varchar" not-null="true" />
    </property>

    <property name="Initial">
      <column name="Initial" sql-type="varchar" not-null="true" />
    </property>

    <property name="OccupationCode">
      <column name="OccupationCode" sql-type="varchar" not-null="true" />
    </property>

    <property name="Nationality">
      <column name="Nationality" sql-type="nvarchar" not-null="true " />
    </property>
    <one-to-one name="CustPhoto"  class="PFMORM00010" property-ref="CustomerId" ></one-to-one>

    <!--Support fields-->

    <property name="Active" not-null="true"/>
    <property name="CreatedDate" not-null="true" update="false" />
    <property name="CreatedUserId" not-null="true" update="false"/>
    <property name="UpdatedDate" not-null="false" insert="false" />
    <property name="UpdatedUserId" not-null="false" insert="false"/>

    <!--Relationship-->
    <many-to-one name="Occupation" column="[OccupationCode]" class="PFMORM00004" insert="false" update="false"></many-to-one>
    <many-to-one name="Township" column="[TownshipCode]" class="Ace.Windows.Admin.DataModel.Township" insert="false" update="false"></many-to-one>
    <many-to-one name="City" column="[CityCode]" class="Ace.Windows.Admin.DataModel.City" insert="false" update="false"></many-to-one>
    <many-to-one name="State" column="[StateCode]" class="Ace.Windows.Admin.DataModel.State" insert="false" update="false"></many-to-one>
    <many-to-one name="InitialEntity" column="[Initial]" class="PFMORM00003" insert="false" update="false"></many-to-one>
    <bag name="SAOF" inverse="true" lazy="true" cascade="none">
      <key column="[CustId]" />
      <one-to-many class="PFMORM00016" />
    </bag>
    <bag name="CAOF" inverse="true" lazy="true" cascade="none">
      <key column="[CustId]" />
      <one-to-many class="PFMORM00017" />
    </bag>
    <bag name="FAOF" inverse="true" lazy="true" cascade="none">
      <key column="[CustId]" />
      <one-to-many class="PFMORM00021" />
    </bag>
  </class>

  <query name="PFMDAO00001.UpdateCloseAccount">
    update PFMORM00001 c set
    c.CloseAC = c.CloseAC + 1,
    c.UpdatedUserId = :updatedUserId,
    c.UpdatedDate = :updatedDate
    where c.CustomerId = :id
    and c.Active = true
  </query>
  <!--//CustomerIdDAO.CheckExist//-->
  <query name="PFMDAO00001.CheckExist">
    select new customerIddto(c.NRC)
    from PFMORM00001 as c
    where nullif(c.NRC, '') != '' and c.NRC != '-' and c.NRC = :nrc and c.Active = true
  </query>

  <!--//CustomerIdDAO.SelectAll//-->
  <query name="PFMDAO00001.SelectAll">
    select new customerIddto
    (c.CustomerId,
    c.Name,
    c.NRC,
    c.GuardianName,
    c.GuardianNRCNo,
    c.FatherName,
    c.Address,
    c.CloseAC,
    c.OpenAC,
    c.CloseDate,
    c.PhoneNo,
    c.FaxNo,
    c.Email,
    c.Signature,
    c.IsVIP,
    c.Gender,
    c.Remark,
    c.PassportNo,
    c.DateOfBirth,
    c.NameOnly,
    c.NickName,
    c.Nationality,
    c.StateCode,
    c.CityCode,
    c.TownshipCode,
    c.Initial,
    c.OccupationCode,
    c.Active,
    c.TS,
    c.CreatedDate,
    c.CreatedUserId,
    c.UpdatedDate,
    c.UpdatedUserId
    )
    from PFMORM00001 as c where c.Active = true

  </query>

  <!--//CustomerIdDAO.SelectTopCustomerId//-->
  <query name="CXDAO00006.SelectByCustomerId">
    select new customerIddto
    (c.CustomerId,
    c.Name,
    c.NRC,
    c.GuardianName,
    c.GuardianNRCNo,
    c.FatherName,
    c.Address,
    c.PhoneNo,
    c.FaxNo,
    c.Email,
    c.Signature,
    c.IsVIP,
    c.Gender,
    c.Remark,
    c.PassportNo,
    c.DateOfBirth,
    c.NameOnly,
    c.NickName,
    c.StateCode,
    state.Description,
    c.CityCode,
    city.Description,
    c.TownshipCode,
    township.Description,
    c.Initial,
    c.OccupationCode,
    c.Nationality,
    cp.CustPhotos
    )
    from PFMORM00001 as c
    left join c.CustPhoto as cp with cp.Active = true
    left join c.City as city with city.Active = true
    left join c.State as state with state.Active = true
    left join c.Township as township with township.Active = true
    where c.Active = true and c.CustomerId = :customerId
  </query>

  <!--//CustomerIdDAO.SelectListbyCustIdList//-->
  <query name="PFMDAO00001.CustomerId_SelectListByCustId">
    select new customerIddto
    (
    c.CustomerId,
    c.Name,
    c.NRC
    )
    from PFMORM00001 as c
    where c.CustomerId  in (:customerlist)
    and c.Active = true
  </query>

  <query name="PFMDAO00001.UpdateOpenAccount">
    update PFMORM00001 c set
    c.OpenAC = c.OpenAC + 1,
    c.UpdatedUserId = :updatedUserId,
    c.UpdatedDate = :updatedDate
    where c.CustomerId = :id
    and c.Active = true
  </query>

  <query name="PFMDAO00001.UpdateOpenAccount_Minus">
    update PFMORM00001 c set
    c.OpenAC = c.OpenAC - 1,
    c.UpdatedUserId = :updatedUserId,
    c.UpdatedDate = :updatedDate
    where c.CustomerId = :id
    and c.Active = true
  </query>

  <query name="CustomerIdDAO.SelectByCustId">
    select new customerIddto
    (c.CustomerId,
    c.Name,
    c.NRC,
    c.GuardianName,
    c.GuardianNRCNo,
    c.FatherName,
    c.Address,
    c.CloseAC,
    c.OpenAC,
    c.CloseDate,
    c.PhoneNo,
    c.FaxNo,
    c.Email,
    c.Signature,
    c.IsVIP,
    c.Gender,
    c.Remark,
    c.PassportNo,
    c.DateOfBirth,
    c.NameOnly,
    c.NickName,
    c.Nationality,
    c.StateCode,
    c.CityCode,
    c.TownshipCode,
    c.Initial,
    c.OccupationCode,
    c.Active,
    c.TS,
    c.CreatedDate,
    c.CreatedUserId,
    c.UpdatedDate,
    c.UpdatedUserId
    )
    from PFMORM00001 as c where c.CustomerId = :custid and c.Active = true
  </query>

  <query name="CXDAO00006.SelectCountByCustomerId">
    select count(CustomerId) from PFMORM00001 where CustomerId = :customerId and Active = true
  </query>


  <query name="PFMDAO00001.UpdateCustomerId">
    update PFMORM00001 c set
    c.Name = :name,
    c.IsNRC=:IsNRC,
    c.NRC=:nrc,
    c.GuardianName =:guardianName,
    c.IsGuardianNRC = :IsGuardianNRC,
    c.GuardianNRCNo=:guardiannrcNo,
    c.FatherName=:fatherName,
    c.Address=:address,
    c.PhoneNo=:phoneNo,
    c.FaxNo=:faxNo,
    c.Email=:email,
    c.Signature=:siganture,
    c.IsVIP=:isVIP,
    c.Gender=:gender,
    c.Remark=:remark,
    c.PassportNo=:passportNo,
    c.DateOfBirth=:dateofbirth,
    c.NameOnly=:nameonly,
    c.NickName=:nickname,
    c.Nationality=:nationality,
    c.StateCode=:statecode,
    c.CityCode=:citycode,
    c.TownshipCode=:townshipCode,
    c.Initial=:initial,
    c.OccupationCode=:occupationCode,
    c.DATE_TIME=:datetime,
    <!--c.SourceBranch = :sourcebranch,-->
    c.UpdatedDate=:updateddate,
    c.UpdatedUserId=:updateduserId
    where c.CustomerId = :customerid and c.Active = true
  </query>

  <query name="CXDAO00006.SelectCustomerInformationBySAOF">
    select new customerIddto
    (
    c.CustomerId,
    c.Name,
    c.Address,
    c.FatherName,
    c.PhoneNo,
    c.FaxNo,
    c.NRC,
    c.Email,
    c.IsVIP,
    cp.CustPhotos,
    c.Signature,
    o.Description,
    s.JoinType,
    s.NoOfPersonSign,
    s.CurrencyCode,
    s.AccountSign,
    s.Business,
    c.DateOfBirth,
    c.GuardianName,
    c.GuardianNRCNo,
    c.TownshipCode,
    c.CityCode,
    c.StateCode,
    township.Description,
    city.Description,
    state.Description,
    s.Name,
    s.OPENDATE,
    s.CreatedDate,
    s.CreatedUserId
    )
    from PFMORM00001 as c
    left join c.CustPhoto as cp
    left join c.Township as township with township.Active = true
    left join c.City as city with city.Active = true
    left join c.State as state with state.Active = true
    right join c.SAOF as s with s.Active = true
    left join c.Occupation as o with o.Active = true
    where s.CledgerAccountNo = :accountNo
    <!--and c.CustomerId = s.Customer_Id
    and o.Occupation_Code = c.OccupationCode
    and c.Active = true-->
  </query>

  <!--<query name="CXDAO00006.SelectCustomerInformationBySAOF">
		select new customerIddto
		(
		c.CustomerId,
		c.Name,
		c.Address,
		c.FatherName,
		c.PhoneNo,
		c.FaxNo,
		c.NRC,
		c.Email,
		c.IsVIP,
		cp.CustPhotos,
		c.Signature,
		o.Description,
		s.JoinType,
		s.NoOfPersonSign,
		s.CurrencyCode,
		s.AccountSign,
		s.Business,
		c.DateOfBirth,
		c.GuardianName,
		c.GuardianNRCNo,
		c.TownshipCode,
		c.CityCode,
		c.StateCode,
		township.Description,
		city.Description,
		state.Description,
		s.Name,
		s.OPENDATE,
		s.CreatedDate,
		s.CreatedUserId
		)
		from PFMORM00001 as c
		left join c.Township as township 
		left join c.City as city
		left join c.State as state 
		inner join c.SAOF as s with s.Active = true
		inner join c.Occupation as o 
		left join c.CustPhoto as cp
		where s.CledgerAccountNo = :accountNo
		and c.CustomerId = s.Customer_Id
		and o.Occupation_Code = c.OccupationCode
		and c.Active = true
	</query>-->

  <query name="CustomerIdDAO.SelectDatasByCustomerId">
    select new customerIddto
    (c.Name,
    c.NRC,
    c.Address,
    c.TownshipCode,
    township.Description,
    c.PhoneNo
    )
    from PFMORM00001 as c left join c.Township as township where c.CustomerId = :custid and c.Active = true and township.Active = true
  </query>

  <query name="CXDAO00006.SelectCustomerInformationByCAOF">
    select new customerIddto
    (
    c.CustomerId,
    c.Name,
    c.Address,
    c.FatherName,
    c.PhoneNo,
    c.FaxNo,
    c.NRC,
    c.Email,
    c.IsVIP,
    cp.CustPhotos,
    c.Signature,
    o.Description,
    caof.JoinType,
    caof.NoOfPersonSign,
    caof.CurrencyCode,
    caof.AccountSign,
    c.DateOfBirth,
    c.GuardianName,
    c.GuardianNRCNo,
    c.TownshipCode,
    c.CityCode,
    c.StateCode,
    township.Description,
    city.Description,
    s.Description,
    caof.Name,
    caof.Business,
    caof.OPENDATE,
    caof.CreatedDate,
    caof.CreatedUserId
    )
    from PFMORM00001 as c
    left join c.CustPhoto as cp with cp.Active = true <!--Modify by HMW at 18-Mar-2019-->
    left join c.Township as township with township.Active = true
    left join c.City as city with city.Active = true
    left join c.State as s with s.Active = true
    right join c.CAOF as caof with caof.Active = true
    left join c.Occupation as o with o.Active = true
    where caof.CledgerAccountNo = :accountNo
    <!--and c.CustomerId = caof.CustomerID
    and o.Occupation_Code = c.OccupationCode
    and c.Active = true-->

    <!--and cp.Active = true-->
  </query>

  <!--<query name="CXDAO00006.SelectCustomerInformationByCAOF">
		select new customerIddto
		(
		c.CustomerId,
		c.Name,
		c.Address,
		c.FatherName,
		c.PhoneNo,
		c.FaxNo,
		c.NRC,
		c.Email,
		c.IsVIP,
		cp.CustPhotos,
		c.Signature,
		o.Description,
		caof.JoinType,
		caof.NoOfPersonSign,
		caof.CurrencyCode,
		caof.AccountSign,
		c.DateOfBirth,
		c.GuardianName,
		c.GuardianNRCNo,
		c.TownshipCode,
		c.CityCode,
		c.StateCode,
		township.Description,
		city.Description,
		s.Description,
		caof.Name,
		caof.Business,
		caof.OPENDATE,
		caof.CreatedDate,
		caof.CreatedUserId
		)
		from PFMORM00001 as c
		left join c.CustPhoto as cp
		left join c.Township as township 
		left join c.City as city 
		left join c.State as s 
		inner join c.CAOF as caof with caof.Active = true
		inner join c.Occupation as o 
		where caof.CledgerAccountNo = :accountNo
		and c.CustomerId = caof.CustomerID
		and o.Occupation_Code = c.OccupationCode
		and c.Active = true
	</query>-->


  <query name="CXDAO00006.SelectCustomerInformationByFAOF">
    select new customerIddto
    (
    c.CustomerId,
    c.Name,
    c.Address,
    c.PhoneNo,
    c.FaxNo,
    c.NRC,
    c.Email,
    c.IsVIP,
    cp.CustPhotos,
    c.Signature,
    o.Description,
    faof.CurrencyCode,
    c.DateOfBirth,
    c.FatherName,
    c.TownshipCode,
    c.CityCode,
    c.StateCode,
    township.Description,
    city.Description,
    s.Description,
    faof.AccountSignature,
    c.GuardianName,
    c.GuardianNRCNo,
    faof.OpenDate,
    faof.CreatedDate,
    faof.CreatedUserId
    )
    from PFMORM00001 as c
    left join c.CustPhoto as cp
    left join c.Occupation as o with o.Active = true
    left join c.Township as township with township.Active = true
    left join c.City as city with city.Active = true
    left join c.State as s with s.Active = true
    right join c.FAOF as faof with faof.Active = true
    where faof.FledgerAccountNo =:accountNo
    <!--and c.CustomerId = faof.CustomerId
    and o.Occupation_Code = c.OccupationCode
    and c.Active = true-->
  </query>


  <!--<query name="PFMDAO00001.SelectCustomerInformationFromCAOFByAccountNo">
		select new customerIddto
		(
		caof.Cur,
		caof.CustID,
		c.Name,
		c.DateOfBirth,
		c.Email,
		c.Address,
		caof.Name,
		c.PhoneNo,
		c.FaxNo,
		c.NRC,
		c.IsVIP,
		c.Township,
		c.State,
		c.City,
		cp.CustPhotos,
		c.Signature,
		o.Description,
		caof.JoinType,
		caof.NoOfPersonSign
		)
		from PFMORM00001 as c
		left join c.CustPhoto as cp
		inner join c.CAOF as caof with caof.Active = true
		inner join c.Occupation as o
		where caof.CledgerAccountNo = :accountNo
		and c.CustomerId = caof.CustomerID
		and o.Occupation_Code = c.OccupationCode
		and c.Active = true

	</query>-->

  <!--TCMSVE00045.SelectCustomerAccountCount-->
  <query name="TCMSVE00045.SelectCustomerAccountCount">
    select new customerIddto
    (
    c.CustomerId,
    c.Name,
    c.NRC,
    c.OpenAC,
    c.CloseAC,
    c.IsVIP
    )
    from PFMORM00001 as c
    where c.CustomerId = :custid
    and c.Active = true
  </query>

  <query name="SelectInfoByCustomerId">
    select new customerIddto
    (c.CustomerId,
    c.Name,
    c.NRC,
    c.GuardianName,
    c.GuardianNRCNo,
    c.FatherName,
    c.Address,
    c.CloseAC,
    c.OpenAC,
    c.CloseDate,
    c.PhoneNo,
    c.FaxNo,
    c.Email,
    c.Signature,
    c.IsVIP,
    c.Gender,
    c.Remark,
    c.PassportNo,
    c.DateOfBirth,
    c.NameOnly,
    c.NickName,
    c.Nationality,
    c.StateCode,
    c.CityCode,
    c.TownshipCode,
    c.Initial,
    c.OccupationCode,
    c.Active,
    c.TS,
    c.CreatedDate,
    c.CreatedUserId,
    c.UpdatedDate,
    c.UpdatedUserId
    )
    from PFMORM00001 as c where c.CustomerId = :custid and c.Active = true <!--and c.SourceBranch = :SourceBr-->
  </query>

  <query name="CustomerIdDAO.SelectInfoByCustomerId">
    select new customerIddto
    (c.CustomerId,
    c.Name,
    c.NRC,
    c.GuardianName,
    c.GuardianNRCNo,
    c.FatherName,
    c.Address,
    c.CloseAC,
    c.OpenAC,
    c.CloseDate,
    c.PhoneNo,
    c.FaxNo,
    c.Email,
    c.Signature,
    c.IsVIP,
    c.Gender,
    c.Remark,
    c.PassportNo,
    c.DateOfBirth,
    c.NameOnly,
    c.NickName,
    c.Nationality,
    c.StateCode,
    c.CityCode,
    c.TownshipCode,
    c.Initial,
    c.OccupationCode,
    c.Active,
    c.TS,
    c.CreatedDate,
    c.CreatedUserId,
    c.UpdatedDate,
    c.UpdatedUserId
    )
    from PFMORM00001 as c where c.CustomerId = :custid and c.Active = true and c.SourceBranch = :SourceBr
  </query>

  <query name="TownshipCodeDAO.SelectTownshipCodeByCustId">
    select new customerIddto(
    c.CreatedUserId,
    t.TownshipCode,
    t.Description
    )
    from  PFMORM00001 as c inner join c.Township as t with t.Active = true
    where t.TownshipCode  = c.TownshipCode
    and c.CustomerId=:custId
    and c.Active = true
  </query>

  <query name="PFMORM00001.SelectCustInfoByCustID">
    select new customerIddto
    (
    c.Name,
    c.NRC,
    c.Address,
    c.TownshipCode,
    c.CityCode,
    c.PhoneNo
    )
    from  PFMORM00001 as c
    where c.CustomerId=:custID

  </query>

  <!--<query name="TownshipCodeDAO.SelectTownshipCodeByCustId">
		select new customerIddto(
		c.CreatedUserId 
		)
		from  PFMORM00001 as c 
		where c.CustomerId=:custId

	</query>-->
</hibernate-mapping>
