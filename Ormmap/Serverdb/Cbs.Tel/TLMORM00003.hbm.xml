<?xml version="1.0" encoding="utf-8"?>
<!--PORATE-->
<!-- 
// <copyright file="TLMORM00003.hbm.xml" company="ACE Data Systems">
// Copyright (c) ACE Data Systems. All rights reserved.
// </copyright>
// <CreatedUser>Nyo Me San</CreatedUser>
// <CreatedDate>2013-05-21</CreatedDate>
// <UpdatedUser></UpdatedUser>
// <UpdatedDate></UpdatedDate>
// <Version>1.0</Version>

-->
<hibernate-mapping assembly="Ace.Cbs.Tel.Dmd" namespace="Ace.Cbs.Tel.Dmd" xmlns="urn:nhibernate-mapping-2.2">
	<import class="Ace.Cbs.Tel.Dmd.TLMDTO00003, Ace.Cbs.Tel.Dmd" rename="poratedto"/>
	<class name="TLMORM00003" table="PORATE" >
    <id name="Id" type="Int32" unsaved-value="0">
      <generator class="increment">
      </generator>
    </id>
		<version name="TS" generated="always" unsaved-value="null" type="BinaryBlob">
			<column name="TS" sql-type="timestamp" not-null="true"/>
		</version>
		<property name="Range">
			<column name="Range" sql-type="numeric" not-null="true" />
		</property>
		<property name="Rate">
			<column name="Rate" sql-type="numeric" not-null="false" />
		</property>
		<property name="FixAmount">
			<column name="FixAmt" sql-type="numeric" not-null="false" />
		</property>
		<property name="StartNo">
			<column name="StartNo" sql-type="numeric" not-null="false" />
		</property>
		<property name="EndNo">
			<column name="EndNo" sql-type="numeric" not-null="false" />
		</property>
		<property name="UniqueId">
			<column name="UId" sql-type="char" not-null="false" />
		</property>
		<property name="Currency">
			<column name="Cur" sql-type="varchar" not-null="true" />
		</property>
		<!--Support Fields-->
		
		<property name="Active" not-null="true"/>
		<property name="CreatedDate" not-null="true" update="false" />
		<property name="CreatedUserId" not-null="true" update="false"/>
		<property name="UpdatedDate" not-null="false" insert="false" />
		<property name="UpdatedUserId" not-null="false" insert="false"/>
		
	</class>

	<!--//PORate.CheckExist//-->
	<query name="PORateDAO.CheckExist">
		select new poratedto(
		p.Id,
		p.Range,
		p.Rate,
		p.FixAmount,
		p.StartNo,
		p.EndNo,
		p.UniqueId,
		p.Currency,
		p.Active,
		p.TS,
		p.CreatedDate,
		p.CreatedUserId,
		p.UpdatedDate,
		p.UpdatedUserId
		)
		from TLMORM00003 as p
		where ( p.Rate = :rate and p.FixAmount = :fixAmt and p.StartNo = :startNo and p.EndNo = :endNo and p.Currency = :cur and  p.Active = true ) or ( p.StartNo = :startNo and p.EndNo = :endNo and p.Currency = :cur and  p.Active = true )
	</query>

	<!--//PORateDAO.SelectAll//-->
	<query name="PORateDAO.SelectAll">
    select new poratedto(
    p.Id,
    p.Range,
    p.Rate,
    p.FixAmount,
    p.StartNo,
    p.EndNo,
    p.UniqueId,
    p.Currency,
    p.Active,
    p.TS,
    p.CreatedDate,
    p.CreatedUserId,
    p.UpdatedDate,
    p.UpdatedUserId
    )
    from TLMORM00003 as p
    where p.Active = true
    order by p.Currency
  </query>  

	<!--//PORateDAO.SelectById//-->
	<query name="PORateDAO.SelectById">
		select new poratedto(
		p.Id,
		p.Range,
		p.Rate,
		p.FixAmount,
		p.StartNo,
		p.EndNo,
		p.UniqueId,
		p.Currency,
		p.Active,
		p.TS,
		p.CreatedDate,
		p.CreatedUserId,
		p.UpdatedDate,
		p.UpdatedUserId
		)
		from TLMORM00003 as p
		where p.Id = :id
		and p.Active = true
	</query>

  <!--//PORateDAO.SelectAllByAmountAndCurrency//-->
  <query name="PORateDAO.SelectAllPORateByCurrency">
    select new poratedto(
    p.Id,
    p.Range,
    p.Rate,
    p.FixAmount,
    p.StartNo,
    p.EndNo,
    p.UniqueId,
    p.Currency,
    p.Active,
    p.TS,
    p.CreatedDate,
    p.CreatedUserId,
    p.UpdatedDate,
    p.UpdatedUserId
    )
    from TLMORM00003 as p
    where p.Currency = :currency
    and p.Active = true
  </query>
	
</hibernate-mapping>