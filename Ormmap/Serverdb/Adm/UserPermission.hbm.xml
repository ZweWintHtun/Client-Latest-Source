<?xml version="1.0" encoding="utf-8"?>
<!--UserPermission-->
<!-- 
// <copyright file="UserPermission.hbm.xml" company="ACE Data Systems">
// Copyright (c) ACE Data Systems. All rights reserved.
// </copyright>
// <CreatedUser>Lenovo</CreatedUser>
// <CreatedDate>09/05/2013</CreatedDate>
// <UpdatedUser></UpdatedUser>
// <UpdatedDate></UpdatedDate>
// <Version></Version>
-->
<hibernate-mapping assembly="Ace.Windows.Admin.DataModel" namespace="Ace.Windows.Admin.DataModel" xmlns="urn:nhibernate-mapping-2.2">

	<import class="Ace.Windows.Admin.DataModel.UserPermissionDTO, Ace.Windows.Admin.DataModel" rename="userPermissionDTO"/>
	<import class="Ace.Windows.Admin.DataModel.UserDTO, Ace.Windows.Admin.DataModel" rename="userDTO"/>

	<class name="UserPermission" table="[UserPermission]">

		<id name="Id" type="Int32" unsaved-value="0">
		</id>

		<version name="TS" generated="always" unsaved-value="null" type="BinaryBlob">
			<column name="TS" sql-type="timestamp" not-null="true"/>
		</version>

		<property name="UserId">
			<column name="UserId" sql-type="int" not-null="true" />
		</property>

		<property name="WorkStationId">
			<column name="WorkStationId" sql-type="int" not-null="true" />
		</property>

		<many-to-one name="WorkStation" column="[WorkStationId]" class="WorkStation" insert="false" update="false" ></many-to-one>
		<many-to-one name="User" column="[UserId]" class="User" insert="false" update="false" ></many-to-one>

		<property name="Active" not-null="true"/>
		<property name="CreatedDate" not-null="true" update="false" />
		<property name="CreatedUserId" not-null="true" update="false"/>
		<property name="UpdatedDate" not-null="false" insert="false" />
		<property name="UpdatedUserId" not-null="false" insert="false"/>

	</class>

	<!--//UserPermission.CheckExist//-->
	<query name="UserPermissionDAO.CheckExist">
		select new userPermissionDTO( u.Id,u.UserId,u.WorkStationId )
		from UserPermission as u where ( u.UserId =: userId or u.WorkStationId =: terminalId  ) and  u.Active = true
	</query>

	<!--//UserPermissionDAO.SelectAll//-->
	<query name="UserPermissionDAO.SelectAll">
		select new userPermissionDTO(
		u.Id,
		u.UserId,
		u.WorkStationId,
		u.Active,
		u.TS,
		u.CreatedDate,
		u.CreatedUserId,
		u.UpdatedDate,
		u.UpdatedUserId
		)
		from UserPermission as u
		where u.Active = true
	</query>

	<!--//UserPermissionDAO.SelectById//-->
	<query name="UserPermissionDAO.SelectById">
		select new userPermissionDTO(
		u.Id,
		u.UserId,
		u.WorkStationId,
		u.Active,
		u.TS,
		u.CreatedDate,
		u.CreatedUserId,
		u.UpdatedDate,
		u.UpdatedUserId
		)
		from UserPermission as u
		where u.Id = :id
		and u.Active = true
	</query>

	<!--//UserPermissionDAO.SelectByUserId//-->
	<query name="UserPermissionDAO.SelectByUserId">
		select new userPermissionDTO(
		u.Id,
		u.WorkStationId,
		u.Active,
		u.TS,
		u.CreatedDate,
		u.CreatedUserId,
		u.UpdatedDate,
		u.UpdatedUserId
		)
		from UserPermission as u
		inner join u.WorkStation as w with w.Active=true
		where u.UserId = :userId
		and u.Active=true
	</query>

<!--//UserPermissionDAO.SelectByWorkstationId//-->
  <query name="UserPermissionDAO.SelectByWorkstationId">
    select new userPermissionDTO(
    u.Id,
    u.WorkStationId,
    s.UserName,
    u.Active,
    u.TS,
    u.CreatedDate,
    u.CreatedUserId,
    u.UpdatedDate,
    u.UpdatedUserId
    )
    from UserPermission as u
    inner join u.WorkStation as w with w.Active=true
    inner join u.User as s with s.Active=true
    where u.WorkStationId = :workStationId
    and u.Active=true
  </query>
	<!--//UserPermissionDAO.DeleteByUserId//-->
	<query name="UserPermissionDAO.DeleteByUserId">
		update UserPermission as u
		set u.Active=false,
		u.UpdatedDate=:updatedDate,
		u.UpdatedUserId=:updatedUserId
		where u.UserId = :userId
		and u.Active = true
	</query>

	<!--//UserPermissionDAO.CheckUserPermissionById//-->
	<query name="UserPermissionDAO.CheckUserPermissionById">
		select new userDTO(
		w.Id,
		w.WorkStationTypeId,
		w.HostName,
		b.BranchCode,
		b.BranchDescription,
		s.IsLogon,
		s.IsMultiUser,
		s.IsCounterUser
		)
		from UserPermission as u
		inner join u.User as s with s.Id =:userId and s.Active=true
		inner join u.WorkStation as w with w.IPAddress = :ipAddress and w.HostName = :hostName and w.Active=true
		inner join w.Branch as b with b.Active = true
		where u.UserId = :userId
	  	and b.BranchCode=w.SourceBranchCode
		and w.SourceBranchCode = s.BranchCode
		and u.Active = true


	</query>

	<!--//UserPermissionDAO.SelectMaxId//-->
	<query name="UserPermissionDAO.SelectMaxId">
		select new userPermissionDTO(
		Max(u.Id)
		)
		from UserPermission as u
	</query>

</hibernate-mapping>
